{"version":3,"sources":["vendor/ember-cli/app-prefix.js","hyperchannel/app.js","hyperchannel/components/-lf-get-outlet-state.js","hyperchannel/components/app-container/component.js","hyperchannel/components/app-container/template.js","hyperchannel/components/channel-container/component.js","hyperchannel/components/channel-container/template.js","hyperchannel/components/channel-input-field/component.js","hyperchannel/components/channel-nav/component.js","hyperchannel/components/channel-nav/template.js","hyperchannel/components/date-headline/component.js","hyperchannel/components/date-headline/template.js","hyperchannel/components/from-elsewhere.js","hyperchannel/components/illiquid-model.js","hyperchannel/components/link-to-username/component.js","hyperchannel/components/link-to-username/template.js","hyperchannel/components/liquid-bind.js","hyperchannel/components/liquid-child.js","hyperchannel/components/liquid-container.js","hyperchannel/components/liquid-if.js","hyperchannel/components/liquid-measured.js","hyperchannel/components/liquid-outlet.js","hyperchannel/components/liquid-spacer.js","hyperchannel/components/liquid-sync.js","hyperchannel/components/liquid-unless.js","hyperchannel/components/liquid-versions.js","hyperchannel/components/message-chat-me/component.js","hyperchannel/components/message-chat-me/template.js","hyperchannel/components/message-chat/component.js","hyperchannel/components/message-chat/template.js","hyperchannel/components/message-input/component.js","hyperchannel/components/message-input/template.js","hyperchannel/components/modal-target/component.js","hyperchannel/components/modal-target/template.js","hyperchannel/components/multiple-from-elsewhere.js","hyperchannel/components/notification-topic-change/component.js","hyperchannel/components/notification-topic-change/template.js","hyperchannel/components/scrolling-observer/component.js","hyperchannel/components/space-setting-modal/component.js","hyperchannel/components/space-setting-modal/template.js","hyperchannel/components/to-elsewhere.js","hyperchannel/components/user-list/component.js","hyperchannel/components/user-list/template.js","hyperchannel/components/web-push-subscription/component.js","hyperchannel/components/web-push-subscription/template.js","hyperchannel/controllers/application.js","hyperchannel/controllers/index.js","hyperchannel/controllers/settings.js","hyperchannel/controllers/space.js","hyperchannel/controllers/space/base_channel.js","hyperchannel/controllers/space/channel.js","hyperchannel/controllers/space/user_channel.js","hyperchannel/ember-gestures/recognizers/pan.js","hyperchannel/ember-gestures/recognizers/pinch.js","hyperchannel/ember-gestures/recognizers/press.js","hyperchannel/ember-gestures/recognizers/rotate.js","hyperchannel/ember-gestures/recognizers/swipe.js","hyperchannel/ember-gestures/recognizers/swipeleft.js","hyperchannel/ember-gestures/recognizers/swiperight.js","hyperchannel/ember-gestures/recognizers/tap.js","hyperchannel/ember-gestures/recognizers/vertical-pan.js","hyperchannel/ember-gestures/recognizers/vertical-swipe.js","hyperchannel/event_dispatcher.js","hyperchannel/helpers/app-version.js","hyperchannel/helpers/cancel-all.js","hyperchannel/helpers/is-after.js","hyperchannel/helpers/is-before.js","hyperchannel/helpers/is-between.js","hyperchannel/helpers/is-same-or-after.js","hyperchannel/helpers/is-same-or-before.js","hyperchannel/helpers/is-same.js","hyperchannel/helpers/lf-lock-model.js","hyperchannel/helpers/lf-or.js","hyperchannel/helpers/moment-add.js","hyperchannel/helpers/moment-calendar.js","hyperchannel/helpers/moment-diff.js","hyperchannel/helpers/moment-duration.js","hyperchannel/helpers/moment-format.js","hyperchannel/helpers/moment-from-now.js","hyperchannel/helpers/moment-from.js","hyperchannel/helpers/moment-subtract.js","hyperchannel/helpers/moment-to-date.js","hyperchannel/helpers/moment-to-now.js","hyperchannel/helpers/moment-to.js","hyperchannel/helpers/moment-unix.js","hyperchannel/helpers/moment.js","hyperchannel/helpers/now.js","hyperchannel/helpers/perform.js","hyperchannel/helpers/task.js","hyperchannel/helpers/unix.js","hyperchannel/helpers/utc.js","hyperchannel/initializers/app-version.js","hyperchannel/initializers/container-debug-adapter.js","hyperchannel/initializers/ember-concurrency.js","hyperchannel/initializers/ember-hammertime.js","hyperchannel/initializers/export-application-global.js","hyperchannel/initializers/hammer.js","hyperchannel/initializers/liquid-fire.js","hyperchannel/initializers/sockethub.js","hyperchannel/instance-initializers/ember-gestures.js","hyperchannel/instance-initializers/remotestorage.js","hyperchannel/models/base_channel.js","hyperchannel/models/channel.js","hyperchannel/models/message.js","hyperchannel/models/space.js","hyperchannel/models/user_channel.js","hyperchannel/resolver.js","hyperchannel/router.js","hyperchannel/routes/application.js","hyperchannel/routes/index.js","hyperchannel/routes/settings.js","hyperchannel/routes/space.js","hyperchannel/routes/space/base_channel.js","hyperchannel/routes/space/channel.js","hyperchannel/routes/space/user_channel.js","hyperchannel/services/-gestures.js","hyperchannel/services/ajax.js","hyperchannel/services/coms.js","hyperchannel/services/ember-elsewhere.js","hyperchannel/services/liquid-fire-transitions.js","hyperchannel/services/logger.js","hyperchannel/services/moment.js","hyperchannel/services/remotestorage.js","hyperchannel/services/sockethub-irc.js","hyperchannel/services/sockethub-xmpp.js","hyperchannel/storages/user-settings.js","hyperchannel/templates/application.js","hyperchannel/templates/settings.js","hyperchannel/templates/space/channel.js","hyperchannel/templates/space/index.js","hyperchannel/templates/space/user_channel.js","hyperchannel/transitions/cross-fade.js","hyperchannel/transitions/default.js","hyperchannel/transitions/explode.js","hyperchannel/transitions/fade.js","hyperchannel/transitions/flex-grow.js","hyperchannel/transitions/fly-to.js","hyperchannel/transitions/move-over.js","hyperchannel/transitions/scale.js","hyperchannel/transitions/scroll-then.js","hyperchannel/transitions/to-down.js","hyperchannel/transitions/to-left.js","hyperchannel/transitions/to-right.js","hyperchannel/transitions/to-up.js","hyperchannel/transitions/wait.js","hyperchannel/utils/channel-message-from-sockethub-object.js","hyperchannel/utils/url-base64-to-uint8-array.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"names":["define","_exports","_resolver","_emberLoadInitializers","_environment","Object","defineProperty","value","default","App","Ember","Application","extend","modulePrefix","podModulePrefix","Resolver","_default","_lfGetOutletState","enumerable","get","_jquery","_recognizers","isElementOf","id","element","parents","concat","length","Component","tagName","classNames","classNameBindings","recognizers","managerOptions","computed","domEvents","touchAction","inputClass","Hammer","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","swipeLeft","this","set","swipeRight","tap","e","showGlobalMenu","target","HTMLBars","template","block","meta","moduleName","_emberConcurrency","scrollToBottom","elem","document","getElementById","scrollTop","scrollHeight","elementId","newMessage","channel","automaticScrollingEnabled","partialRenderingEnabled","partialRenderingObserverMargin","renderedMessagesCount","renderedMessagesAddendumAmount","coms","inject","service","renderedMessages","sortedMessages","slice","channelChanged","observer","_this","run","later","send","messagesUpdated","scheduleOnce","didInsertElement","_super","apply","arguments","clientHeight","on","focusMessageInputField","$","focus","loadPreviousMessages","task","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","loadLastMessages","stop","drop","actions","processMessageOrCommand","substr","onCommand","onMessage","menu","which","what","addUsernameMentionToMessage","username","msg","match","RegExp","increaseRenderedMessagesCount","newMessagesCount","setAutomaticScrolling","state","TextField","keyUp","ev","altKey","key","_insertAtCaret","myValue","el","selection","createRange","text","selectionStart","startPos","endPos","selectionEnd","substring","_emberKeyboardShortcuts","router","storage","keyboardShortcuts","freeze","ctrl+shift+up","ctrl+shift+down","bindKeyboardShortcuts","willDestroyElement","unbindKeyboardShortcuts","activeChannel","spaces","forEach","space","isPresent","transitionToRelativeChannel","relativePosition","channels","sortedChannels","currentPosition","indexOf","edge","edgeOpposite","_ref","newChannel","transitionTo","joinChannel","channelName","window","prompt","isEmpty","createChannel","saveSpace","leaveChannel","removeChannel","name","visible","lastChannel","goPreviousChannel","goNextChannel","_moment","updateInterval","headline","date","scheduleUpdate","environment","notifyPropertyChange","isSame","subtract","toLocaleDateString","_fromElsewhere","_illiquidModel","roles","init","@","%","+","role","usernameWithoutPrefix","regex","keys","join","replace","_liquidBind","_liquidChild","_liquidContainer","_liquidIf","_liquidMeasured","measure","_liquidOutlet","_liquidSpacer","_liquidSync","_liquidUnless","_liquidVersions","_component","message","datetime","format","dateTitle","formattedContent","out","content","linkifyStr","linkAttributes","rel","validate","url","test","email","String","htmlSafe","usernameClick","onUsernameClick","usernames","tab","completeUsername","input","querySelector","cursorPosition","textBeforeCursor","textAfterCursor","words","split","searchWord","pop","find","toLowerCase","startsWith","newCursorPosition","push","setSelectionRange","modalAnimation","lookup","call","pick","use","maxOpacity","outsideClick","modal","onOutsideClick","_multipleFromElsewhere","rootElement","rootMargin","threshold","enabled","retriggeringEnabled","createIntersectionObserver","disconnect","config","root","IntersectionObserver","entries","entry","isIntersecting","onIntersect","unobserve","observe","onDiverge","rootMarginChanged","enabledChanged","_space","settings","create","setProperties","serialize","save","onSave","cancel","onCancel","_toElsewhere","users","renderedUsersCount","renderedUsersAddendumAmount","renderedUsers","usersChanged","increaseRenderedUsersCount","newUsersCount","_urlBase64ToUint8Array","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","botkaURL","subscribed","webPushBaseURL","navigator","serviceWorker","ready","registration","pushManager","getSubscription","subscription","subscribe","_this2","fn","response","vapidPublicKey","convertedVapidKey","fetch","sent","abrupt","userVisibleOnly","applicationServerKey","self","args","err","undefined","_x","bind","console","debug","endpoint","method","headers","Content-type","body","JSON","stringify","user","unsubscribe","_this3","Controller","alias","showChannelMenu","application","controller","newSpace","selectedSpacePreset","showSpaceSettingModal","notEmpty","addSpaceFromPreset","preset","connectAndAddSpace","_message","createMessage","type","Date","nickname","menuProp","capitalize","toggleProperty","sendMessage","transferMessage","model","addMessage","executeCommand","commandText","commandSplitted","command","includes","warn","joinCommand","transitionToRoute","partCommand","leaveCommand","helpCommand","meCommand","transferMeMessage","msgCommand","shift","createUserChannel","topicCommand","topic","changeTopic","_base_channel","_pan","_pinch","_press","_rotate","_swipe","include","exclude","options","direction","DIRECTION_LEFT","eventName","recognizer","DIRECTION_RIGHT","_tap","_verticalPan","_verticalSwipe","_event_dispatcher","assign","merge","gestures","emberUseCapture","removeTracking","useFastPaths","useCapture","_regexp","appVersion","_","hash","version","APP","versionOnly","hideSha","shaOnly","hideVersion","showExtended","versionExtendedRegExp","versionRegExp","shaRegExp","Helper","helper","_cancelAll","_isAfter","_isBefore","_isBetween","_isSameOrAfter","_isSameOrBefore","_isSame","_lfLockModel","lfLockModel","_lfOr","lfOr","_momentAdd","_momentCalendar","_momentDiff","_momentDuration","_momentFormat","_momentFromNow","_momentFrom","_momentSubtract","_momentToDate","_momentToNow","_momentTo","_unix","_now","_perform","_task","_utc","utc","_initializerFactory","initialize","_containerDebugAdapter","app","register","exportApplicationGlobal","theGlobal","global","globalName","classify","reopen","willDestroy","defaults","cssProps","userSelect","_velocityExt","sockethub","SockethubClient","io","sockethubURL","path","instantiate","singleton","instance","getOwner","appInstance","remoteStorage","evt","userList","messages","connected","sockethubChannelId","unreadMessages","unreadMentions","isLogged","loggedChannel","slug","unreadMessagesClass","sortBy","sortedUserList","sort","a","b","localeCompare","addDateHeadline","headlineDate","startOf","toDate","toString","dateMessage","pushObject","addUser","removeUser","removeObject","searchedPreviousLogsUntilDate","formattedTopic","defaultProtocol","protocol","server","previousSockethubPersonIds","channelSorting","hostname","port","secure","password","nickServ","channelNames","mapBy","sockethubChannelIds","loggedChannels","findBy","userNickname","updateUsername","sockethubPersonId","personID","serialized","dasherize","parseInt","prop","isUserChannel","_emberResolver","Router","location","locationType","rootURL","map","route","Route","logger","beforeModel","setupListeners","instantiateSpacesAndChannels","_emberLocalStorage","userSettings","storageFor","redirect","currentSpace","defaultSpaceId","currentChannel","kosmos","getAll","res","col","RSVP","spacePresets","setupController","addSpace","modelFor","removeSpace","params","createChannelOrUserChannel","innerWidth","didTransition","setEach","_gestures","_ajax","_channel","_user_channel","_typeof","obj","Symbol","iterator","constructor","prototype","Service","ajax","irc","xmpp","socket","handleSockethubCompleted","handleSockethubMessage","handleSockethubFailure","rs","spaceData","addDefaultSpace","data","instantiateChannels","log","connectServer","getServiceForSockethubPlatform","connect","@id","@type","displayName","leave","updateChannelUserList","context","getChannelById","actor","getChannel","Array","isArray","object","members","addUserToChannelUserList","removeUserFromChannelUserList","channelId","personId","actorId","updateChannelTopic","currentTopic","newTopic","Notification","requestPermission","platform","generateChannelId","catch","searchUntilDate","maximumDays","isBefore","loadArchiveMessages","_this4","logsUrl","publicLogsUrl","request","dataType","archive","channelMessage","timestamp","from","previous","userName","handleJoinCompleted","handleChannelJoin","addMessageToChannel","handlePresenceUpdate","_this$logger","_emberElsewhere","_transitionMap","allowedTypes","activeTypes","Error","add","addObject","remove","disable","enable","defaultFormat","_remotestoragejs","_remotestorageModuleKosmos","modules","access","claim","caching","spaceConfig","s","store","_channelMessageFromSockethubObject","buildActivityObject","details","baseObject","buildMessageObject","actorObject","ActivityStreams","credentials","nick","emit","observeChannel","joinMsg","getChannelForMessage","leaveMsg","topicMsg","observeMsg","targetChannelName","credentialsJob","resource","connectJob","targetChannelId","presence","status","getSpaceForMessage","_object","Storage","reopenClass","initialState","_crossFade","_explode","_fade","_flexGrow","_flyTo","_moveOver","_scale","_scrollThen","_toDown","_toLeft","_toRight","_toUp","_wait","published","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","i","charCodeAt","metaName","prefix","rawConfig","getAttribute","exports","parse","decodeURIComponent","runningTests","require"],"mappings":"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","file":"hyperchannel.js","sourcesContent":["'use strict';\n\n\n","define(\"hyperchannel/app\", [\"exports\", \"hyperchannel/resolver\", \"ember-load-initializers\", \"hyperchannel/config/environment\"], function (_exports, _resolver, _emberLoadInitializers, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n  var _default = App;\n  _exports.default = _default;\n});","define(\"hyperchannel/components/-lf-get-outlet-state\", [\"exports\", \"liquid-fire/components/-lf-get-outlet-state\"], function (_exports, _lfGetOutletState) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _lfGetOutletState.default;\n    }\n  });\n});","define(\"hyperchannel/components/app-container/component\", [\"exports\", \"jquery\", \"ember-gestures/mixins/recognizers\"], function (_exports, _jquery, _recognizers) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function isElementOf(id, element) {\n    return element.id === id || (0, _jquery.default)(element).parents(\"#\".concat(id)).length > 0;\n  }\n\n  var _default = Ember.Component.extend(_recognizers.default, {\n    tagName: 'div',\n    classNames: ['app-container'],\n    classNameBindings: ['showGlobalMenu:global-menu-open', 'showChannelMenu:channel-menu-open'],\n    recognizers: 'swipeleft swiperight tap',\n    // Hammer.js manager options\n    // Used by the ember-gestures recognizer Mixin,\n    // needed to fix swipe gestures in Chrome.\n    managerOptions: Ember.computed('', function () {\n      return {\n        domEvents: true,\n        touchAction: 'auto',\n        inputClass: Hammer.SUPPORT_POINTER_EVENTS ? Hammer.PointerEventInput : Hammer.TouchInput\n      };\n    }),\n    swipeLeft: function swipeLeft() {\n      this.set('showGlobalMenu', false);\n    },\n    swipeRight: function swipeRight() {\n      this.set('showGlobalMenu', true);\n    },\n    tap: function tap(e) {\n      if (this.showGlobalMenu && !isElementOf('channel-header', e.target) && !isElementOf('global', e.target)) {\n        this.set('showGlobalMenu', false);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/app-container/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"wwkYFP9l\",\n    \"block\": \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[15,1],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/app-container/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-container/component\", [\"exports\", \"ember-concurrency\"], function (_exports, _emberConcurrency) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function scrollToBottom() {\n    var elem = document.getElementById('channel-content');\n    elem.scrollTop = elem.scrollHeight;\n  }\n\n  var _default = Ember.Component.extend({\n    elementId: 'channel',\n    newMessage: '',\n    channel: null,\n    automaticScrollingEnabled: true,\n    partialRenderingEnabled: true,\n    partialRenderingObserverMargin: '200px',\n    renderedMessagesCount: 0,\n    // maximum number of messages to render\n    renderedMessagesAddendumAmount: 30,\n    // number of messages to increase rendering count by\n    coms: Ember.inject.service(),\n    renderedMessages: Ember.computed('channel.sortedMessages.[]', 'renderedMessagesCount', function () {\n      if (this.partialRenderingEnabled) {\n        return this.channel.sortedMessages.slice(-this.renderedMessagesCount);\n      } else {\n        return this.channel.sortedMessages;\n      }\n    }),\n    channelChanged: Ember.observer('channel', function () {\n      var _this = this;\n\n      this.set('renderedMessagesCount', this.renderedMessagesAddendumAmount);\n      this.set('partialRenderingEnabled', true);\n      this.set('automaticScrollingEnabled', true);\n      Ember.run.later(this, function () {\n        return _this.send('menu', 'global', 'hide');\n      }, 500);\n    }),\n    messagesUpdated: Ember.observer('renderedMessages.[]', function () {\n      if (this.automaticScrollingEnabled) {\n        Ember.run.scheduleOnce('afterRender', scrollToBottom);\n      }\n    }),\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      Ember.run.scheduleOnce('afterRender', this, function () {\n        this.set('partialRenderingObserverMargin', \"\".concat(this.element.clientHeight / 3, \"px\")); // TODO update the config when window is resized\n        // We need to define an empty handler for swipe events on the\n        // #channel-content element, so that the actual handler of the app container\n        // component gets triggered\n\n        Hammer(document.getElementById('channel-content')).on('swipe', function () {});\n      });\n    },\n    focusMessageInputField: function focusMessageInputField() {\n      var inputEl = this.$('#message-field').get(0);\n      inputEl.focus();\n    },\n    loadPreviousMessages: (0, _emberConcurrency.task)(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.set('automaticScrollingEnabled', false);\n              _context.next = 3;\n              return this.coms.loadLastMessages(this.get('channel.space'), this.channel, this.get('channel.searchedPreviousLogsUntilDate'));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    })).drop(),\n    actions: {\n      processMessageOrCommand: function processMessageOrCommand() {\n        if (this.newMessage.substr(0, 1) === \"/\") {\n          this.onCommand(this.newMessage);\n        } else {\n          this.onMessage(this.newMessage);\n        }\n      },\n      menu: function menu(which, what) {\n        this.menu(which, what);\n      },\n      addUsernameMentionToMessage: function addUsernameMentionToMessage(username) {\n        var msg = this.newMessage;\n\n        if (!msg.match(new RegExp(\"^\".concat(username)))) {\n          this.set('newMessage', \"\".concat(username, \": \").concat(msg));\n        }\n\n        this.focusMessageInputField();\n      },\n      increaseRenderedMessagesCount: function increaseRenderedMessagesCount() {\n        var newMessagesCount = this.renderedMessagesCount + this.renderedMessagesAddendumAmount;\n        this.set('renderedMessagesCount', newMessagesCount);\n        this.set('partialRenderingEnabled', newMessagesCount < this.channel.sortedMessages.length);\n      },\n      setAutomaticScrolling: function setAutomaticScrolling(state) {\n        this.set('automaticScrollingEnabled', state);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-container/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"f5ul03MV\",\n    \"block\": \"{\\\"symbols\\\":[\\\"message\\\"],\\\"statements\\\":[[7,\\\"main\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"header\\\"],[11,\\\"id\\\",\\\"channel-header\\\"],[11,\\\"onClick\\\",\\\"\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h2\\\"],[11,\\\"id\\\",\\\"channel-name\\\"],[12,\\\"class\\\",[29,\\\"if\\\",[[25,[\\\"channel\\\",\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null]],[9],[1,[25,[\\\"channel\\\",\\\"name\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"id\\\",\\\"channel-title\\\"],[9],[1,[25,[\\\"channel\\\",\\\"formattedTopic\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"nav\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-megaphone\\\"],[9],[10],[10],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-mute\\\"],[9],[10],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[3,\\\"action\\\",[[24,0,[]],\\\"menu\\\",\\\"global\\\",\\\"toggle\\\"]],[10],[0,\\\"\\\\n\\\\n  \\\"],[7,\\\"section\\\"],[11,\\\"id\\\",\\\"channel-content\\\"],[11,\\\"class\\\",\\\"main\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[25,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[29,\\\"perform\\\",[[25,[\\\"loadPreviousMessages\\\"]]],null]],[11,\\\"class\\\",\\\"load-previous\\\"],[11,\\\"role\\\",\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"\\\\n        Load previous messages\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"scrolling-observer\\\",null,[[\\\"rootElement\\\",\\\"rootMargin\\\",\\\"enabled\\\",\\\"onIntersect\\\"],[\\\"#channel-content\\\",[25,[\\\"partialRenderingObserverMargin\\\"]],[25,[\\\"partialRenderingEnabled\\\"]],[29,\\\"action\\\",[[24,0,[]],\\\"increaseRenderedMessagesCount\\\"],null]]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[25,[\\\"renderedMessages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n          \\\"],[1,[29,\\\"component\\\",[[24,1,[\\\"type\\\"]]],[[\\\"message\\\",\\\"onUsernameClick\\\"],[[24,1,[]],[29,\\\"action\\\",[[24,0,[]],\\\"addUsernameMentionToMessage\\\"],null]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[4,\\\"if\\\",[[25,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"no-messages discreet\\\"],[9],[0,\\\"No recent messages to display.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"no-messages discreet\\\"],[9],[0,\\\"No Kosmos logs configured for this channel. \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"https://wiki.kosmos.org/Setting_up_channel_logs\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[11,\\\"rel\\\",\\\"noopener\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Learn more\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"      \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"scrolling-observer\\\",null,[[\\\"rootElement\\\",\\\"rootMargin\\\",\\\"threshold\\\",\\\"retriggeringEnabled\\\",\\\"onIntersect\\\",\\\"onDiverge\\\"],[[25,[\\\"element\\\"]],\\\"0px\\\",1,false,[29,\\\"action\\\",[[24,0,[]],\\\"setAutomaticScrolling\\\",true],null],[29,\\\"action\\\",[[24,0,[]],\\\"setAutomaticScrolling\\\",false],null]]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[7,\\\"footer\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[29,\\\"message-input\\\",null,[[\\\"message\\\",\\\"onSend\\\",\\\"usernames\\\"],[[25,[\\\"newMessage\\\"]],[29,\\\"action\\\",[[24,0,[]],\\\"processMessageOrCommand\\\"],null],[25,[\\\"channel\\\",\\\"userList\\\"]]]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"aside\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"nav\\\"],[9],[0,\\\"\\\\n      \\\"],[4,\\\"link-to\\\",null,[[\\\"class\\\",\\\"route\\\"],[\\\"active\\\",\\\"index\\\"]],{\\\"statements\\\":[[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-users\\\"],[9],[10]],\\\"parameters\\\":[]},null],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-paperclip\\\"],[9],[10],[10],[4,\\\"link-to\\\",null,[[\\\"route\\\"],[\\\"settings\\\"]],{\\\"statements\\\":[[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-cog\\\"],[9],[10]],\\\"parameters\\\":[]},null],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-resize-enlarge\\\"],[9],[10],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[1,[29,\\\"user-list\\\",null,[[\\\"users\\\"],[[25,[\\\"channel\\\",\\\"sortedUserList\\\"]]]]],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-input-field/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.TextField.extend({\n    keyUp: function keyUp(ev) {\n      // console.debug('keyUp', ev);\n      if (ev.altKey) {\n        switch (ev.key) {\n          case 'k':\n            this._insertAtCaret(\"\\x03\");\n\n            break;\n        }\n      }\n    },\n    _insertAtCaret: function _insertAtCaret(myValue) {\n      var el = this.$().get(0);\n\n      if (document.selection) {\n        el.focus();\n        el = document.selection.createRange();\n        el.text = myValue;\n        el.focus();\n      } else if (el.selectionStart || el.selectionStart === '0') {\n        var startPos = el.selectionStart;\n        var endPos = el.selectionEnd;\n        var scrollTop = el.scrollTop;\n        el.value = el.value.substring(0, startPos) + myValue + el.value.substring(endPos, el.value.length);\n        el.focus();\n        el.selectionStart = startPos + myValue.length;\n        el.selectionEnd = startPos + myValue.length;\n        el.scrollTop = scrollTop;\n      } else {\n        el.value += myValue;\n        el.focus();\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-nav/component\", [\"exports\", \"ember-keyboard-shortcuts\"], function (_exports, _emberKeyboardShortcuts) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    tagName: 'ul',\n    router: Ember.inject.service(),\n    coms: Ember.inject.service(),\n    storage: Ember.inject.service('remotestorage'),\n    keyboardShortcuts: Object.freeze({\n      'ctrl+shift+up': 'goPreviousChannel',\n      'ctrl+shift+down': 'goNextChannel'\n    }),\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      (0, _emberKeyboardShortcuts.bindKeyboardShortcuts)(this);\n    },\n    willDestroyElement: function willDestroyElement() {\n      this._super.apply(this, arguments);\n\n      (0, _emberKeyboardShortcuts.unbindKeyboardShortcuts)(this);\n    },\n    activeChannel: Ember.computed('spaces.@each.activeChannel', function () {\n      var activeChannel;\n      this.spaces.forEach(function (space) {\n        var channel = space.activeChannel;\n\n        if (Ember.isPresent(channel)) {\n          activeChannel = channel;\n        }\n      });\n      return activeChannel;\n    }),\n    transitionToRelativeChannel: function transitionToRelativeChannel(relativePosition) {\n      if (Ember.isPresent(this.activeChannel)) {\n        var channels = this.activeChannel.space.sortedChannels;\n        var currentPosition = channels.indexOf(this.activeChannel);\n        var edge = channels.length - 1;\n        var edgeOpposite = 0;\n\n        if (relativePosition === -1) {\n          // swap variables\n          var _ref = [edgeOpposite, edge];\n          edge = _ref[0];\n          edgeOpposite = _ref[1];\n        }\n\n        var newPosition = currentPosition === edge ? edgeOpposite : currentPosition + relativePosition;\n        var newChannel = channels[newPosition];\n        this.router.transitionTo('space.channel', newChannel.space, newChannel);\n      }\n    },\n    actions: {\n      joinChannel: function joinChannel(space) {\n        var channelName = window.prompt('Join channel');\n\n        if (Ember.isEmpty(channelName)) {\n          return;\n        }\n\n        if (space.get('protocol') === 'IRC' && !channelName.match(/^#/)) {\n          channelName = \"#\".concat(channelName);\n        }\n\n        var channel = this.coms.createChannel(space, channelName);\n        this.storage.saveSpace(space);\n        this.router.transitionTo('space.channel', space, channel);\n      },\n      leaveChannel: function leaveChannel(space, channel) {\n        this.coms.removeChannel(space, channel.name); // Switch to last channel if the channel parted was currently open\n\n        if (channel.visible) {\n          var lastChannel = space.get('sortedChannels.lastObject');\n          this.router.transitionTo('space.channel', space, lastChannel);\n        }\n      },\n      goPreviousChannel: function goPreviousChannel() {\n        this.transitionToRelativeChannel(-1);\n      },\n      goNextChannel: function goNextChannel() {\n        this.transitionToRelativeChannel(1);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-nav/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"uhT951Xh\",\n    \"block\": \"{\\\"symbols\\\":[\\\"space\\\",\\\"channel\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[25,[\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h2\\\"],[9],[4,\\\"link-to\\\",null,[[\\\"route\\\",\\\"model\\\"],[\\\"space\\\",[24,1,[]]]],{\\\"statements\\\":[[1,[24,1,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[24,1,[\\\"sortedChannels\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[30,[[29,\\\"if\\\",[[24,2,[\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null],\\\" \\\",[24,2,[\\\"unreadMessagesClass\\\"]],\\\" \\\",[29,\\\"if\\\",[[24,2,[\\\"visible\\\"]],\\\"active\\\",\\\"\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[24,2,[\\\"isUserChannel\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",null,[[\\\"route\\\",\\\"models\\\"],[\\\"space.user-channel\\\",[29,\\\"array\\\",[[24,1,[]],[24,2,[]]],null]]],{\\\"statements\\\":[[1,[24,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",null,[[\\\"route\\\",\\\"models\\\"],[\\\"space.channel\\\",[29,\\\"array\\\",[[24,1,[]],[24,2,[]]],null]]],{\\\"statements\\\":[[1,[24,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"          \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"leave-channel\\\"],[12,\\\"title\\\",[30,[\\\"Leave \\\",[24,2,[\\\"name\\\"]]]]],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"x\\\"],[3,\\\"action\\\",[[24,0,[]],\\\"leaveChannel\\\",[24,1,[]],[24,2,[]]]],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"      \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"join-channel\\\"],[11,\\\"role\\\",\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"+\\\"],[3,\\\"action\\\",[[24,0,[]],\\\"joinChannel\\\",[24,1,[]]]],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/date-headline/component\", [\"exports\", \"moment\", \"hyperchannel/config/environment\"], function (_exports, _moment, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    classNames: ['date-headline'],\n    updateInterval: 120000,\n    // 2 minutes\n    headline: Ember.computed('message.date', function () {\n      var _this = this;\n\n      var date = (0, _moment.default)(this.get('message.date'));\n\n      var scheduleUpdate = function scheduleUpdate() {\n        // don't schedule updates during testing, because it makes the tests time out\n        if (!_environment.default.environment === 'testing') {\n          Ember.run.later(function () {\n            _this.notifyPropertyChange('message.date');\n          }, _this.updateInterval);\n        }\n      };\n\n      if (date.isSame((0, _moment.default)(), 'day')) {\n        scheduleUpdate();\n        return 'Today';\n      }\n\n      if (date.isSame((0, _moment.default)().subtract(1, 'day'), 'day')) {\n        scheduleUpdate();\n        return 'Yesterday';\n      }\n\n      return this.get('message.date').toLocaleDateString();\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/date-headline/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"Frz7aetB\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"h3\\\"],[9],[1,[23,\\\"headline\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/date-headline/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/from-elsewhere\", [\"exports\", \"ember-elsewhere/components/from-elsewhere\"], function (_exports, _fromElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _fromElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/illiquid-model\", [\"exports\", \"liquid-fire/components/illiquid-model\"], function (_exports, _illiquidModel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _illiquidModel.default;\n    }\n  });\n});","define(\"hyperchannel/components/link-to-username/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    username: null,\n    roles: null,\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('roles', {\n        '@': 'op',\n        '%': 'half-op',\n        '+': 'voice'\n      });\n    },\n    role: Ember.computed('username', 'roles', function () {\n      var role = this.roles[this.username[0]];\n\n      if (Ember.isPresent(role)) {\n        return role;\n      }\n\n      return 'normal';\n    }),\n    usernameWithoutPrefix: Ember.computed('username', 'roles', function () {\n      var regex = RegExp(\"^[\\\\\".concat(Object.keys(this.roles).join('\\\\'), \"]\"));\n      return this.username.replace(regex, '');\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/link-to-username/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"amag9JGi\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"link-to\\\",null,[[\\\"class\\\",\\\"route\\\",\\\"model\\\"],[[25,[\\\"role\\\"]],\\\"space.user-channel\\\",[25,[\\\"usernameWithoutPrefix\\\"]]]],{\\\"statements\\\":[[1,[23,\\\"username\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/link-to-username/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/liquid-bind\", [\"exports\", \"liquid-fire/components/liquid-bind\"], function (_exports, _liquidBind) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidBind.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-child\", [\"exports\", \"liquid-fire/components/liquid-child\"], function (_exports, _liquidChild) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidChild.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-container\", [\"exports\", \"liquid-fire/components/liquid-container\"], function (_exports, _liquidContainer) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidContainer.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-if\", [\"exports\", \"liquid-fire/components/liquid-if\"], function (_exports, _liquidIf) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidIf.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-measured\", [\"exports\", \"liquid-fire/components/liquid-measured\"], function (_exports, _liquidMeasured) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidMeasured.default;\n    }\n  });\n  Object.defineProperty(_exports, \"measure\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidMeasured.measure;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-outlet\", [\"exports\", \"liquid-fire/components/liquid-outlet\"], function (_exports, _liquidOutlet) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidOutlet.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-spacer\", [\"exports\", \"liquid-fire/components/liquid-spacer\"], function (_exports, _liquidSpacer) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidSpacer.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-sync\", [\"exports\", \"liquid-fire/components/liquid-sync\"], function (_exports, _liquidSync) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidSync.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-unless\", [\"exports\", \"liquid-fire/components/liquid-unless\"], function (_exports, _liquidUnless) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidUnless.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-versions\", [\"exports\", \"liquid-fire/components/liquid-versions\"], function (_exports, _liquidVersions) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidVersions.default;\n    }\n  });\n});","define(\"hyperchannel/components/message-chat-me/component\", [\"exports\", \"hyperchannel/components/message-chat/component\"], function (_exports, _component) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _component.default.extend({\n    classNames: ['chat-message', 'chat-me-message']\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-chat-me/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"sml+pUAZ\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"username\\\"],[12,\\\"data-username\\\",[25,[\\\"message\\\",\\\"nickname\\\"]]],[9],[1,[25,[\\\"message\\\",\\\"nickname\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"message\\\"],[9],[1,[23,\\\"formattedContent\\\"],false],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/message-chat-me/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-chat/component\", [\"exports\", \"moment\"], function (_exports, _moment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    tagName: 'div',\n    classNames: ['chat-message'],\n    message: null,\n    datetime: Ember.computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD[T]HH:mm');\n    }),\n    dateTitle: Ember.computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD [at] HH:mm');\n    }),\n    formattedContent: Ember.computed('message.content', function () {\n      var content = this.get('message.content');\n      var out; // Images\n\n      if (content.match(/^(http)s?:\\/\\/.*(gif|png|jpg|jpeg)$/i)) {\n        out = \"<br><a href=\\\"\".concat(content, \"\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener\\\">\") + \"<img src=\\\"\".concat(content, \"\\\" class=\\\"from-image-url\\\" alt=\\\"\").concat(content, \"\\\">\") + \"</a>\";\n      } // Other links\n      else {\n          out = linkifyStr(content, {\n            linkAttributes: {\n              rel: 'nofollow noopener'\n            },\n            validate: {\n              url: function url(value) {\n                return /^(http)s?:\\/\\//.test(value);\n              },\n              email: function email() {\n                return false;\n              }\n            }\n          });\n        } // Colors\n\n\n      out = out.replace(/\\u0003(\\d+)/g, '<span class=\"color-$1\">').replace(/\"color-(\\d)\"/g, '\"color-0$1\"').replace(/\\u0002/g, '<span class=\"bold\">').replace(/\\u001D/g, '<span class=\"italic\">').replace(/\\u000f/g, '</span>');\n      return Ember.String.htmlSafe(out);\n    }),\n    actions: {\n      usernameClick: function usernameClick(username) {\n        this.onUsernameClick(username);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-chat/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"BWbZTNBW\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"chat-message__username\\\"],[12,\\\"data-username\\\",[25,[\\\"message\\\",\\\"nickname\\\"]]],[12,\\\"onclick\\\",[29,\\\"action\\\",[[24,0,[]],\\\"usernameClick\\\",[25,[\\\"message\\\",\\\"nickname\\\"]]],null]],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"\\\\n  \\\"],[1,[25,[\\\"message\\\",\\\"nickname\\\"]],false],[0,\\\":\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"time\\\"],[11,\\\"class\\\",\\\"chat-message__date\\\"],[12,\\\"datetime\\\",[23,\\\"datetime\\\"]],[12,\\\"title\\\",[23,\\\"dateTitle\\\"]],[9],[0,\\\"\\\\n  \\\"],[1,[29,\\\"moment-format\\\",[[25,[\\\"message\\\",\\\"date\\\"]],\\\"HH:mm\\\"],null],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"chat-message__message\\\"],[9],[0,\\\"\\\\n  \\\"],[1,[23,\\\"formattedContent\\\"],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/message-chat/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-input/component\", [\"exports\", \"ember-keyboard-shortcuts\"], function (_exports, _emberKeyboardShortcuts) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    tagName: 'section',\n    elementId: 'new-message',\n    message: '',\n    usernames: null,\n    keyboardShortcuts: Object.freeze({\n      'tab': 'completeUsername'\n    }),\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      (0, _emberKeyboardShortcuts.bindKeyboardShortcuts)(this);\n    },\n    willDestroyElement: function willDestroyElement() {\n      this._super.apply(this, arguments);\n\n      (0, _emberKeyboardShortcuts.unbindKeyboardShortcuts)(this);\n    },\n    actions: {\n      completeUsername: function completeUsername() {\n        var input = this.element.querySelector('#message-field');\n        var cursorPosition = input.selectionStart;\n        var textBeforeCursor = this.message.slice(0, cursorPosition);\n        var textAfterCursor = this.message.slice(cursorPosition);\n        var words = textBeforeCursor.split(' ');\n        var searchWord = words.pop();\n        if (Ember.isEmpty(searchWord)) return;\n        var username = this.usernames.find(function (username) {\n          return username.toLowerCase().startsWith(searchWord.toLowerCase());\n        });\n        if (Ember.isEmpty(username)) return; // add a colon when inserting the username in the beginning\n\n        if (words.length === 0) {\n          username = \"\".concat(username, \": \");\n        }\n\n        var lengthDiff = username.length - searchWord.length;\n        var newCursorPosition = cursorPosition + lengthDiff;\n        words.push(username);\n        var newMessage = \"\".concat(words.join(' ')).concat(textAfterCursor);\n        this.set('message', newMessage); // set the cursor right behind the inserted username,\n        // but we have to wait for the update of the input first\n\n        Ember.run.scheduleOnce('afterRender', this, function () {\n          input.focus();\n          input.setSelectionRange(newCursorPosition, newCursorPosition);\n        });\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-input/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"7yQqJceI\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"form\\\"],[9],[0,\\\"\\\\n  \\\"],[1,[29,\\\"channel-input-field\\\",null,[[\\\"value\\\",\\\"placeholder\\\",\\\"name\\\",\\\"id\\\",\\\"autocomplete\\\"],[[25,[\\\"message\\\"]],\\\"Type a message and hit enter\\\",\\\"chat-message\\\",\\\"message-field\\\",\\\"off\\\"]]],false],[0,\\\"\\\\n\\\"],[3,\\\"action\\\",[[24,0,[]],[25,[\\\"onSend\\\"]]],[[\\\"on\\\"],[\\\"submit\\\"]]],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/message-input/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/modal-target/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    modalAnimation: function modalAnimation() {\n      return this.lookup('explode').call(this, {\n        pick: '.modal-background',\n        use: ['fade', {\n          maxOpacity: 0.5\n        }]\n      }, {\n        pick: '.modal-dialog',\n        use: 'scale'\n      });\n    },\n    actions: {\n      outsideClick: function outsideClick(modal) {\n        if (modal && modal.onOutsideClick) {\n          modal.onOutsideClick();\n        }\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/modal-target/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"QFJtaXsI\",\n    \"block\": \"{\\\"symbols\\\":[\\\"modal\\\",\\\"currentModal\\\"],\\\"statements\\\":[[4,\\\"from-elsewhere\\\",null,[[\\\"name\\\"],[\\\"modal\\\"]],{\\\"statements\\\":[[4,\\\"liquid-bind\\\",[[24,1,[]]],[[\\\"containerless\\\",\\\"use\\\"],[true,[25,[\\\"modalAnimation\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[24,2,[]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-container\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-background\\\"],[12,\\\"onclick\\\",[29,\\\"action\\\",[[24,0,[]],\\\"outsideClick\\\",[24,2,[]]],null]],[11,\\\"role\\\",\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-dialog\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[24,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[29,\\\"component\\\",[[24,2,[\\\"body\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[29,\\\"component\\\",[[24,2,[]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/modal-target/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/multiple-from-elsewhere\", [\"exports\", \"ember-elsewhere/components/multiple-from-elsewhere\"], function (_exports, _multipleFromElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _multipleFromElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/notification-topic-change/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    tagName: 'div',\n    classNames: ['topic-change-notification']\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/notification-topic-change/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"lVxE/fHh\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"Topic was changed to \\\\\\\"\\\"],[1,[25,[\\\"message\\\",\\\"content\\\"]],false],[0,\\\"\\\\\\\" by \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"username\\\"],[12,\\\"data-username\\\",[25,[\\\"message\\\",\\\"nickname\\\"]]],[9],[1,[25,[\\\"message\\\",\\\"nickname\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/notification-topic-change/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/scrolling-observer/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    rootElement: null,\n    rootMargin: '100px',\n    threshold: 0,\n    enabled: true,\n    retriggeringEnabled: true,\n    observer: null,\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      Ember.run.scheduleOnce('afterRender', this, function () {\n        this.createIntersectionObserver();\n      });\n    },\n    willDestroyElement: function willDestroyElement() {\n      this._super.apply(this, arguments);\n\n      if (this.observer) {\n        this.observer.disconnect();\n      }\n    },\n    createIntersectionObserver: function createIntersectionObserver() {\n      var _this = this;\n\n      var rootElement = this.rootElement;\n\n      if (typeof rootElement === 'string') {\n        rootElement = document.querySelector(rootElement);\n      }\n\n      var config = {\n        root: rootElement,\n        rootMargin: this.rootMargin,\n        threshold: this.threshold\n      };\n      var observer = new IntersectionObserver(function (entries, observer) {\n        entries.forEach(function (entry) {\n          if (entry.isIntersecting) {\n            if (_this.onIntersect) {\n              _this.onIntersect();\n            }\n\n            if (_this.enabled && _this.retriggeringEnabled) {\n              Ember.run.scheduleOnce('afterRender', _this, function () {\n                observer.unobserve(entry.target);\n                observer.observe(entry.target);\n              });\n            }\n          } else {\n            if (_this.onDiverge) {\n              _this.onDiverge();\n            }\n          }\n        });\n      }, config);\n      observer.observe(this.element);\n      this.set('observer', observer);\n    },\n    rootMarginChanged: Ember.observer('rootMargin', function () {\n      if (this.enabled && this.observer) {\n        this.observer.disconnect();\n        this.createIntersectionObserver();\n      }\n    }),\n    enabledChanged: Ember.observer('enabled', function () {\n      if (this.enabled) {\n        this.observer.observe(this.element);\n      } else {\n        this.observer.disconnect();\n      }\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/space-setting-modal/component\", [\"exports\", \"hyperchannel/models/space\"], function (_exports, _space) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    settings: null,\n    space: null,\n    init: function init() {\n      this._super.apply(this, arguments); // create a clone of the settings that we can operate on\n\n\n      var space = _space.default.create();\n\n      space.setProperties(this.settings.serialize());\n      this.set('space', space);\n    },\n    actions: {\n      save: function save() {\n        this.onSave(this.space);\n      },\n      cancel: function cancel() {\n        this.onCancel();\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/space-setting-modal/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"eOZ7ZDnj\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"h1\\\"],[9],[0,\\\"Space Setting\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"form\\\"],[11,\\\"name\\\",\\\"add-space\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[25,[\\\"space\\\",\\\"protocol\\\"]],\\\"required\\\",\\\"IRC\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[25,[\\\"space\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[25,[\\\"space\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[25,[\\\"space\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[29,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[25,[\\\"space\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled-modal\\\"]]],false],[0,\\\"\\\\n    \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"tls-enabled-modal\\\"],[9],[0,\\\"Secure (TLS)\\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[25,[\\\"space\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[29,\\\"input\\\",null,[[\\\"type\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"password\\\",[25,[\\\"space\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[25,[\\\"space\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"input\\\"],[11,\\\"value\\\",\\\"Save\\\"],[11,\\\"type\\\",\\\"submit\\\"],[9],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[3,\\\"action\\\",[[24,0,[]],\\\"save\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Cancel\\\"],[3,\\\"action\\\",[[24,0,[]],\\\"cancel\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/space-setting-modal/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/to-elsewhere\", [\"exports\", \"ember-elsewhere/components/to-elsewhere\"], function (_exports, _toElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/user-list/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    tagName: 'section',\n    elementId: 'user-list',\n    classNames: ['main'],\n    users: null,\n    renderedUsersCount: 0,\n    renderedUsersAddendumAmount: 50,\n    // number of users to add when scrolling to bottom\n    partialRenderingEnabled: true,\n    renderedUsers: Ember.computed('users.[]', 'renderedUsersCount', function () {\n      if (this.partialRenderingEnabled) {\n        return this.users.slice(0, this.renderedUsersCount);\n      } else {\n        return this.users;\n      }\n    }),\n    // called when changing list of users (i.e. when switching channels)\n    usersChanged: Ember.observer('users', function () {\n      this.set('renderedUsersCount', this.renderedUsersAddendumAmount);\n      this.set('partialRenderingEnabled', true);\n      Ember.run.scheduleOnce('afterRender', this, function () {\n        this.element.scrollTop = 0;\n      });\n    }),\n    actions: {\n      increaseRenderedUsersCount: function increaseRenderedUsersCount() {\n        var newUsersCount = this.renderedUsersCount + this.renderedUsersAddendumAmount;\n        this.set('renderedUsersCount', newUsersCount);\n        this.set('partialRenderingEnabled', newUsersCount < this.users.length);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/user-list/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"fssdcnHe\",\n    \"block\": \"{\\\"symbols\\\":[\\\"username\\\"],\\\"statements\\\":[[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[25,[\\\"renderedUsers\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"li\\\"],[9],[1,[29,\\\"link-to-username\\\",null,[[\\\"username\\\"],[[24,1,[]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"  \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"last-element\\\"],[9],[10],[0,\\\"\\\\n  \\\"],[1,[29,\\\"scrolling-observer\\\",null,[[\\\"rootElement\\\",\\\"rootMargin\\\",\\\"enabled\\\",\\\"onIntersect\\\"],[[25,[\\\"element\\\"]],\\\"200px\\\",[25,[\\\"partialRenderingEnabled\\\"]],[29,\\\"action\\\",[[24,0,[]],\\\"increaseRenderedUsersCount\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/user-list/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/web-push-subscription/component\", [\"exports\", \"hyperchannel/utils/url-base64-to-uint8-array\"], function (_exports, _urlBase64ToUint8Array) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var _default = Ember.Component.extend({\n    botkaURL: null,\n    username: null,\n    subscribed: false,\n    webPushBaseURL: Ember.computed('botkaURL', function () {\n      return this.botkaURL + '/web-push';\n    }),\n    init: function init() {\n      var _this = this;\n\n      this._super.apply(this, arguments);\n\n      navigator.serviceWorker.ready.then(function (registration) {\n        return registration.pushManager.getSubscription();\n      }).then(function (subscription) {\n        if (subscription) {\n          _this.set('subscribed', true);\n        }\n      });\n    },\n    actions: {\n      subscribe: function subscribe() {\n        var _this2 = this;\n\n        navigator.serviceWorker.ready.then(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          regeneratorRuntime.mark(function _callee(registration) {\n            var response, vapidPublicKey, convertedVapidKey;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return fetch(this.webPushBaseURL + '/vapid-public-key');\n\n                  case 2:\n                    response = _context.sent;\n                    _context.next = 5;\n                    return response.text();\n\n                  case 5:\n                    vapidPublicKey = _context.sent;\n                    // Chrome doesn't accept the base64-encoded (string) vapidPublicKey yet\n                    convertedVapidKey = (0, _urlBase64ToUint8Array.default)(vapidPublicKey); // Subscribe the user\n\n                    return _context.abrupt(\"return\", registration.pushManager.subscribe({\n                      userVisibleOnly: true,\n                      applicationServerKey: convertedVapidKey\n                    }));\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }().bind(this)).then(function (subscription) {\n          console.debug('Subscribed', subscription.endpoint);\n          return fetch(_this2.webPushBaseURL + '/register', {\n            method: 'post',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              user: _this2.username,\n              subscription: subscription\n            })\n          });\n        }).then(this.set('subscribed', true));\n      },\n      unsubscribe: function unsubscribe() {\n        var _this3 = this;\n\n        navigator.serviceWorker.ready.then(function (registration) {\n          return registration.pushManager.getSubscription();\n        }).then(function (subscription) {\n          return subscription.unsubscribe().then(function () {\n            console.debug('Unsubscribed', subscription.endpoint);\n            return fetch(_this3.webPushBaseURL + '/unregister', {\n              method: 'post',\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify({\n                subscription: subscription\n              })\n            });\n          });\n        }).then(this.set('subscribed', false));\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/web-push-subscription/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"VZVi93NP\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"p\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"i\\\"],[9],[0,\\\"username:\\\"],[10],[0,\\\" \\\"],[1,[23,\\\"username\\\"],false],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n  \\\"],[7,\\\"i\\\"],[9],[0,\\\"base URL:\\\"],[10],[0,\\\" \\\"],[1,[23,\\\"webPushBaseURL\\\"],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[25,[\\\"subscribed\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Disable push notifications\\\"],[3,\\\"action\\\",[[24,0,[]],\\\"unsubscribe\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Receive push notifications\\\"],[3,\\\"action\\\",[[24,0,[]],\\\"subscribe\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[10]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/web-push-subscription/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/application\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    coms: Ember.inject.service(),\n    spaces: Ember.computed.alias('coms.spaces'),\n    showGlobalMenu: false,\n    showChannelMenu: false\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/index\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    application: Ember.inject.controller()\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/settings\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    application: Ember.inject.controller(),\n    coms: Ember.inject.service(),\n    storage: Ember.inject.service('remotestorage'),\n    newSpace: null,\n    selectedSpacePreset: null,\n    showSpaceSettingModal: Ember.computed.notEmpty('selectedSpacePreset'),\n    actions: {\n      addSpaceFromPreset: function addSpaceFromPreset(preset) {\n        this.set('selectedSpacePreset', preset);\n      },\n      saveSpace: function saveSpace(space) {\n        var _this = this;\n\n        this.set('selectedSpacePreset', null);\n        this.storage.saveSpace(space).then(function () {\n          _this.coms.connectAndAddSpace(space);\n        });\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({});\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space/base_channel\", [\"exports\", \"hyperchannel/models/message\"], function (_exports, _message) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    newMessage: null,\n    application: Ember.inject.controller(),\n    space: Ember.inject.controller(),\n    coms: Ember.inject.service(),\n    storage: Ember.inject.service('remotestorage'),\n    createMessage: function createMessage(message, type) {\n      return _message.default.create({\n        type: type,\n        date: new Date(),\n        nickname: this.get('space.model.server.nickname'),\n        content: message\n      });\n    },\n    actions: {\n      menu: function menu(which, what) {\n        var menuProp = \"show\".concat(which.capitalize(), \"Menu\");\n\n        switch (what) {\n          case 'show':\n            this.application.set(menuProp, true);\n            break;\n\n          case 'hide':\n            this.application.set(menuProp, false);\n            break;\n\n          case 'toggle':\n            this.application.toggleProperty(menuProp);\n            break;\n        }\n      },\n      sendMessage: function sendMessage(newMessage) {\n        var message = this.createMessage(newMessage, 'message-chat');\n        this.coms.transferMessage(this.get('space.model'), this.model, message.get('content'));\n        this.model.addMessage(message);\n        this.set('newMessage', null);\n      },\n      executeCommand: function executeCommand(newMessage) {\n        var availableCommands = [\"help\", \"join\", \"leave\", \"me\", \"msg\", \"part\", \"topic\"];\n        var commandText = newMessage.substr(1);\n        var commandSplitted = commandText.split(\" \");\n        var command = commandSplitted[0];\n\n        if (availableCommands.includes(command.toLowerCase())) {\n          this.send(command + 'Command', commandSplitted.slice(1));\n        } else {\n          console.warn('[channel]', 'Unknown command', commandText);\n        }\n\n        this.set('newMessage', null);\n      },\n      joinCommand: function joinCommand(args) {\n        var space = this.get('space.model');\n        var channel = this.coms.createChannel(space, args[0]);\n        this.storage.saveSpace(space);\n        this.transitionToRoute('space.channel', space, channel);\n      },\n      partCommand: function partCommand() {\n        var space = this.get('space.model');\n        var channelName = this.get('model.name');\n        this.coms.removeChannel(space, channelName);\n        var lastChannel = space.get('channels.lastObject');\n\n        if (Ember.isPresent(lastChannel)) {\n          this.transitionToRoute('space.channel', space, lastChannel);\n        } else {\n          this.transitionToRoute('space', space);\n        }\n      },\n      leaveCommand: function leaveCommand() {\n        this.send('partCommand');\n      },\n      helpCommand: function helpCommand() {},\n      meCommand: function meCommand(args) {\n        var newMessage = args.join(' ');\n        var message = this.createMessage(newMessage, 'message-chat-me');\n        this.coms.transferMeMessage(this.get('space.model'), this.get('model.sockethubChannelId'), message.get('content'));\n        this.model.addMessage(message);\n      },\n      msgCommand: function msgCommand(args) {\n        var username = args.shift();\n        this.coms.createUserChannel(this.get('space.model'), username); // TODO fix this, sockethub sends a failure event with error\n        // \"TypeError: Cannot read property 'indexOf' of undefined\"\n        // this.get('coms').transferMessage(this.get('space.model'), username, args.join(' '));\n      },\n      topicCommand: function topicCommand(args) {\n        var channel = this.model;\n        var topic = args.join(' ');\n        this.coms.changeTopic(this.get('space.model'), channel, topic);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space/channel\", [\"exports\", \"hyperchannel/controllers/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({});\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space/user_channel\", [\"exports\", \"hyperchannel/controllers/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({});\n\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/pan\", [\"exports\", \"ember-gestures/recognizers/pan\"], function (_exports, _pan) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _pan.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/pinch\", [\"exports\", \"ember-gestures/recognizers/pinch\"], function (_exports, _pinch) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _pinch.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/press\", [\"exports\", \"ember-gestures/recognizers/press\"], function (_exports, _press) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _press.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/rotate\", [\"exports\", \"ember-gestures/recognizers/rotate\"], function (_exports, _rotate) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _rotate.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/swipe\", [\"exports\", \"ember-gestures/recognizers/swipe\"], function (_exports, _swipe) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _swipe.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/swipeleft\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  var _default = {\n    include: [],\n    exclude: [],\n    options: {\n      threshold: 25,\n      direction: Hammer.DIRECTION_LEFT\n    },\n    eventName: 'swipeleft',\n    recognizer: 'swipe'\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/swiperight\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  var _default = {\n    include: [],\n    exclude: [],\n    options: {\n      threshold: 25,\n      direction: Hammer.DIRECTION_RIGHT\n    },\n    eventName: 'swiperight',\n    recognizer: 'swipe'\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/tap\", [\"exports\", \"ember-gestures/recognizers/tap\"], function (_exports, _tap) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _tap.default;\n    }\n  });\n});","define(\"hyperchannel/ember-gestures/recognizers/vertical-pan\", [\"exports\", \"ember-gestures/recognizers/vertical-pan\"], function (_exports, _verticalPan) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _verticalPan.default;\n    }\n  });\n});","define(\"hyperchannel/ember-gestures/recognizers/vertical-swipe\", [\"exports\", \"ember-gestures/recognizers/vertical-swipe\"], function (_exports, _verticalSwipe) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _verticalSwipe.default;\n    }\n  });\n});","define(\"hyperchannel/event_dispatcher\", [\"exports\", \"ember-gestures/event_dispatcher\", \"hyperchannel/config/environment\"], function (_exports, _event_dispatcher, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var assign = Ember.assign || Ember.merge;\n  var gestures = assign({}, {\n    emberUseCapture: false,\n    removeTracking: false,\n    useFastPaths: false\n  });\n  gestures = assign(gestures, _environment.default.gestures);\n\n  var _default = _event_dispatcher.default.extend({\n    useCapture: gestures.emberUseCapture,\n    removeTracking: gestures.removeTracking,\n    useFastPaths: gestures.useFastPaths\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/helpers/app-version\", [\"exports\", \"hyperchannel/config/environment\", \"ember-cli-app-version/utils/regexp\"], function (_exports, _environment, _regexp) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.appVersion = appVersion;\n  _exports.default = void 0;\n\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var version = _environment.default.APP.version; // e.g. 1.0.0-alpha.1+4jds75hf\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n\n    var versionOnly = hash.versionOnly || hash.hideSha;\n    var shaOnly = hash.shaOnly || hash.hideVersion;\n    var match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      } // Fallback to just version\n\n\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  var _default = Ember.Helper.helper(appVersion);\n\n  _exports.default = _default;\n});","define(\"hyperchannel/helpers/cancel-all\", [\"exports\", \"ember-concurrency/helpers/cancel-all\"], function (_exports, _cancelAll) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _cancelAll.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-after\", [\"exports\", \"ember-moment/helpers/is-after\"], function (_exports, _isAfter) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isAfter.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-before\", [\"exports\", \"ember-moment/helpers/is-before\"], function (_exports, _isBefore) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isBefore.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-between\", [\"exports\", \"ember-moment/helpers/is-between\"], function (_exports, _isBetween) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isBetween.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-same-or-after\", [\"exports\", \"ember-moment/helpers/is-same-or-after\"], function (_exports, _isSameOrAfter) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isSameOrAfter.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-same-or-before\", [\"exports\", \"ember-moment/helpers/is-same-or-before\"], function (_exports, _isSameOrBefore) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isSameOrBefore.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-same\", [\"exports\", \"ember-moment/helpers/is-same\"], function (_exports, _isSame) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isSame.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/lf-lock-model\", [\"exports\", \"liquid-fire/helpers/lf-lock-model\"], function (_exports, _lfLockModel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _lfLockModel.default;\n    }\n  });\n  Object.defineProperty(_exports, \"lfLockModel\", {\n    enumerable: true,\n    get: function get() {\n      return _lfLockModel.lfLockModel;\n    }\n  });\n});","define(\"hyperchannel/helpers/lf-or\", [\"exports\", \"liquid-fire/helpers/lf-or\"], function (_exports, _lfOr) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _lfOr.default;\n    }\n  });\n  Object.defineProperty(_exports, \"lfOr\", {\n    enumerable: true,\n    get: function get() {\n      return _lfOr.lfOr;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-add\", [\"exports\", \"ember-moment/helpers/moment-add\"], function (_exports, _momentAdd) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentAdd.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-calendar\", [\"exports\", \"ember-moment/helpers/moment-calendar\"], function (_exports, _momentCalendar) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentCalendar.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-diff\", [\"exports\", \"ember-moment/helpers/moment-diff\"], function (_exports, _momentDiff) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentDiff.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-duration\", [\"exports\", \"ember-moment/helpers/moment-duration\"], function (_exports, _momentDuration) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentDuration.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-format\", [\"exports\", \"ember-moment/helpers/moment-format\"], function (_exports, _momentFormat) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentFormat.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-from-now\", [\"exports\", \"ember-moment/helpers/moment-from-now\"], function (_exports, _momentFromNow) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentFromNow.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-from\", [\"exports\", \"ember-moment/helpers/moment-from\"], function (_exports, _momentFrom) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentFrom.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-subtract\", [\"exports\", \"ember-moment/helpers/moment-subtract\"], function (_exports, _momentSubtract) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentSubtract.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-to-date\", [\"exports\", \"ember-moment/helpers/moment-to-date\"], function (_exports, _momentToDate) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentToDate.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-to-now\", [\"exports\", \"ember-moment/helpers/moment-to-now\"], function (_exports, _momentToNow) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentToNow.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-to\", [\"exports\", \"ember-moment/helpers/moment-to\"], function (_exports, _momentTo) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentTo.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-unix\", [\"exports\", \"ember-moment/helpers/unix\"], function (_exports, _unix) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _unix.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment\", [\"exports\", \"ember-moment/helpers/moment\"], function (_exports, _moment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _moment.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/now\", [\"exports\", \"ember-moment/helpers/now\"], function (_exports, _now) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _now.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/perform\", [\"exports\", \"ember-concurrency/helpers/perform\"], function (_exports, _perform) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _perform.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/task\", [\"exports\", \"ember-concurrency/helpers/task\"], function (_exports, _task) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _task.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/unix\", [\"exports\", \"ember-moment/helpers/unix\"], function (_exports, _unix) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _unix.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/utc\", [\"exports\", \"ember-moment/helpers/utc\"], function (_exports, _utc) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _utc.default;\n    }\n  });\n  Object.defineProperty(_exports, \"utc\", {\n    enumerable: true,\n    get: function get() {\n      return _utc.utc;\n    }\n  });\n});","define(\"hyperchannel/initializers/app-version\", [\"exports\", \"ember-cli-app-version/initializer-factory\", \"hyperchannel/config/environment\"], function (_exports, _initializerFactory, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var name, version;\n\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  var _default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/container-debug-adapter\", [\"exports\", \"ember-resolver/resolvers/classic/container-debug-adapter\"], function (_exports, _containerDebugAdapter) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = {\n    name: 'container-debug-adapter',\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/ember-concurrency\", [\"exports\", \"ember-concurrency/initializers/ember-concurrency\"], function (_exports, _emberConcurrency) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _emberConcurrency.default;\n    }\n  });\n});","define(\"hyperchannel/initializers/ember-hammertime\", [\"exports\", \"ember-hammertime/components/component\"], function (_exports, _component) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  // activate touch action css\n  var _default = {\n    name: 'ember-hammertime',\n    initialize: function initialize() {}\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/export-application-global\", [\"exports\", \"hyperchannel/config/environment\"], function (_exports, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.initialize = initialize;\n  _exports.default = void 0;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  var _default = {\n    name: 'export-application-global',\n    initialize: initialize\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/hammer\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  var _default = {\n    name: 'hammer',\n    initialize: function initialize() {\n      // Enable text selection.\n      // It's disabled by default to improve UX on desktop, so text wouldn't\n      // be selected when panning.\n      delete Hammer.defaults.cssProps.userSelect;\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/liquid-fire\", [\"exports\", \"liquid-fire/velocity-ext\"], function (_exports, _velocityExt) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = {\n    name: 'liquid-fire',\n    initialize: function initialize() {}\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/sockethub\", [\"exports\", \"hyperchannel/config/environment\"], function (_exports, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global SockethubClient */\n\n  /* global io */\n  // TODO move settings into config file\n  var sockethub = new SockethubClient(io(_environment.default.sockethubURL, {\n    path: '/sockethub'\n  }));\n  var _default = {\n    name: 'sockethub',\n    initialize: function initialize(app) {\n      app.register('sockethub:client', sockethub, {\n        instantiate: false,\n        singleton: true\n      });\n      app.inject('controller', 'sockethub', 'sockethub:client');\n      app.inject('route', 'sockethub', 'sockethub:client');\n      app.inject('component', 'sockethub', 'sockethub:client');\n      app.inject('service', 'sockethub', 'sockethub:client');\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/instance-initializers/ember-gestures\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = {\n    name: 'ember-gestures',\n    initialize: function initialize(instance) {\n      if (typeof instance.lookup === \"function\") {\n        instance.lookup('service:-gestures');\n      } else {\n        // This can be removed when we no-longer support ember 1.12 and 1.13\n        Ember.getOwner(instance).lookup('service:-gestures');\n      }\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/instance-initializers/remotestorage\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.initialize = initialize;\n  _exports.default = void 0;\n\n  function initialize(appInstance) {\n    var storage = appInstance.lookup('service:remotestorage');\n    var remoteStorage = storage.get('rs'); // Add to window global for debugging/development\n\n    window.remoteStorage = remoteStorage;\n    var rsEvents = ['ready', 'not-connected', 'connected', 'disconnected', 'error', 'features-loaded', 'connecting', 'authing', 'wire-busy', 'wire-done', 'network-offline', 'network-online'];\n    rsEvents.forEach(function (evt) {\n      remoteStorage.on(evt, function () {\n        return console.debug(\"[remotestorage] RS event: \".concat(evt));\n      });\n    });\n  }\n\n  var _default = {\n    name: 'remotestorage',\n    initialize: initialize\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/models/base_channel\", [\"exports\", \"hyperchannel/models/message\", \"moment\"], function (_exports, _message, _moment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Object.extend({\n    space: null,\n    name: '',\n    userList: null,\n    messages: null,\n    connected: false,\n    sockethubChannelId: null,\n    topic: null,\n    unreadMessages: false,\n    unreadMentions: false,\n    visible: false,\n    // Current/active channel\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('messages', []);\n      this.set('userList', []);\n    },\n    isLogged: Ember.computed('space.loggedChannels.[]', 'name', function () {\n      var _this = this;\n\n      var loggedChannel = this.get('space.loggedChannels').find(function (channelName) {\n        return channelName === _this.name;\n      });\n      return Ember.isPresent(loggedChannel);\n    }),\n    slug: Ember.computed('name', function () {\n      // This could be based on server type in the future. E.g. IRC would be\n      // server URL, while Campfire would be another id.\n      return this.name.replace(/#/g, '');\n    }),\n    unreadMessagesClass: Ember.computed('visible', 'unreadMessages', 'unreadMentions', function () {\n      if (this.visible || !this.unreadMessages) {\n        return null;\n      }\n\n      return this.unreadMentions ? 'unread-mentions' : 'unread-messages';\n    }),\n    sortedMessages: Ember.computed('messages.@each.date', function () {\n      return this.messages.sortBy('date');\n    }),\n    sortedUserList: Ember.computed('userList.[]', function () {\n      return this.userList.sort(function (a, b) {\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      });\n    }),\n    addDateHeadline: function addDateHeadline(newMessage) {\n      var headlineDate = (0, _moment.default)(newMessage.get('date')).startOf('day').toDate();\n      var existingDateHeadline = this.messages.find(function (message) {\n        return message.get('type') === 'date-headline' && message.get('date').toString() === headlineDate.toString();\n      });\n\n      if (existingDateHeadline) {\n        return;\n      }\n\n      var dateMessage = _message.default.create({\n        type: 'date-headline',\n        date: headlineDate\n      });\n\n      this.messages.pushObject(dateMessage);\n    },\n    addMessage: function addMessage(message) {\n      this.addDateHeadline(message);\n      this.messages.pushObject(message);\n\n      if (!this.visible) {\n        this.set('unreadMessages', true);\n\n        if (message.get('content').match(this.get('space.userNickname'))) {\n          this.set('unreadMentions', true);\n        }\n      }\n    },\n    addUser: function addUser(username) {\n      if (!this.userList.includes(username)) {\n        this.userList.pushObject(username);\n      }\n    },\n    removeUser: function removeUser(username) {\n      this.userList.removeObject(username);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/channel\", [\"exports\", \"hyperchannel/models/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    searchedPreviousLogsUntilDate: null,\n    formattedTopic: Ember.computed('topic', function () {\n      if (this.topic !== null) {\n        var topic = linkifyStr(this.topic, {\n          defaultProtocol: 'https',\n          linkAttributes: {\n            rel: 'nofollow'\n          }\n        });\n        return new Ember.String.htmlSafe(topic);\n      } else {\n        return '';\n      }\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/message\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Object.extend({\n    type: null,\n    date: null,\n    nickname: null,\n    content: null\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/space\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Object.extend({\n    name: null,\n    protocol: 'IRC',\n    server: null,\n    channels: null,\n    // Channel instances\n    botkaURL: null,\n    // Kosmos bot\n    // Keep a list of all old sockethubPersonIds, because there might\n    // still be coming events from Sockethub for those.\n    previousSockethubPersonIds: null,\n    channelSorting: null,\n    sortedChannels: Ember.computed.sort('channels', 'channelSorting'),\n    init: function init() {\n      this.set('channelSorting', ['name']);\n      this.set('channels', []);\n      this.set('previousSockethubPersonIds', []);\n      this.set('server', {\n        hostname: null,\n        port: 7000,\n        secure: true,\n        username: null,\n        password: null,\n        nickname: null,\n        nickServ: {\n          password: null\n        }\n      });\n\n      this._super.apply(this, arguments);\n    },\n    channelNames: Ember.computed('channels.@each.name', function () {\n      return this.channels.mapBy('name');\n    }),\n    sockethubChannelIds: Ember.computed('channels.@each.sockethubChannelId', function () {\n      return this.channels.mapBy('sockethubChannelId');\n    }),\n    loggedChannels: Ember.computed('name', 'protocol', function () {\n      if (this.name === 'Freenode' && this.protocol === 'IRC') {\n        return ['#5apps', '#kosmos', '#kosmos-dev', '#remotestorage', '#hackerbeach', '#unhosted', '#sockethub', '#opensourcedesign', '#openknot', '#emberjs', '#indieweb', '#mastodon'];\n      } else {\n        return [];\n      }\n    }),\n    activeChannel: Ember.computed('channels.@each.visible', function () {\n      return this.channels.findBy('visible', true);\n    }),\n    userNickname: Ember.computed.alias('server.nickname'),\n    updateUsername: function updateUsername(username) {\n      // keep track of old name for later reference\n      this.previousSockethubPersonIds.pushObject(this.sockethubPersonId);\n\n      switch (this.protocol) {\n        case 'IRC':\n          this.set('server.nickname', username);\n          break;\n\n        case 'XMPP':\n          this.set('server.username', username);\n          break;\n      }\n    },\n    sockethubPersonId: Ember.computed('protocol', 'server.{hostname,username,nickname}', function () {\n      var personID;\n\n      switch (this.protocol) {\n        case 'IRC':\n          // TODO - remove the use of any URI protocol part\n          personID = \"irc://\".concat(this.get('server.nickname'), \"@\").concat(this.get('server.hostname'));\n          break;\n\n        case 'XMPP':\n          // TODO - why isn't the full JID user+host+resource?\n          personID = \"\".concat(this.get('server.username'), \"/hyperchannel\");\n          break;\n      }\n\n      return personID;\n    }),\n    serialize: function serialize() {\n      var _this = this;\n\n      var serialized = {\n        id: this.id || this.name.dasherize(),\n        name: this.name,\n        protocol: this.protocol,\n        server: {\n          hostname: this.get('server.hostname'),\n          port: parseInt(this.get('server.port'), 10),\n          secure: this.get('server.secure'),\n          nickname: this.get('server.nickname')\n        },\n        channels: this.channelNames || []\n      };\n\n      if (Ember.isPresent(this.botkaURL)) {\n        serialized.botkaURL = this.botkaURL;\n      }\n\n      ['username', 'password', 'nickname'].forEach(function (prop) {\n        // TODO credentials need to be encrypted and probably stored elsewhere\n        if (Ember.isPresent(_this.get(\"server.\".concat(prop)))) {\n          serialized.server[prop] = _this.get(\"server.\".concat(prop));\n        }\n      });\n      return serialized;\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/user_channel\", [\"exports\", \"hyperchannel/models/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    isUserChannel: true\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/resolver\", [\"exports\", \"ember-resolver\"], function (_exports, _emberResolver) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _emberResolver.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/router\", [\"exports\", \"hyperchannel/config/environment\"], function (_exports, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n  Router.map(function () {\n    this.route('space', {\n      path: '/:id'\n    }, function () {\n      this.route('channel', {\n        path: '/channel/:slug'\n      });\n      this.route('user-channel', {\n        path: '/user/:slug'\n      });\n    });\n    this.route('settings');\n  });\n  var _default = Router;\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/application\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    logger: Ember.inject.service(),\n    coms: Ember.inject.service(),\n    beforeModel: function beforeModel() {\n      this._super.apply(this, arguments); // See a list of allowed types in logger.js\n      // Add or remove all your log types here:\n      // this.get('logger').add('message');\n      // this.get('logger').remove('join');\n      // this.get('logger').disable();\n      // this.get('logger').enable();\n\n    },\n    model: function model() {\n      this.coms.setupListeners();\n      return this.coms.instantiateSpacesAndChannels();\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/index\", [\"exports\", \"ember-local-storage\", \"hyperchannel/config/environment\"], function (_exports, _emberLocalStorage, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    redirect: function redirect() {\n      var currentSpace = this.get('userSettings.currentSpace') || _environment.default.defaultSpaceId;\n\n      var currentChannel = this.get('userSettings.currentChannel') || 'kosmos';\n\n      if (currentSpace && currentChannel) {\n        this.transitionTo('space.channel', currentSpace, currentChannel);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/settings\", [\"exports\", \"hyperchannel/models/space\", \"hyperchannel/config/environment\"], function (_exports, _space, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    storage: Ember.inject.service('remotestorage'),\n    coms: Ember.inject.service(),\n    model: function model() {\n      var rsKosmos = this.get('storage.rs').kosmos;\n      var spaces = rsKosmos.spaces.getAll().then(function (res) {\n        var col = [];\n\n        if (Ember.isEmpty(res)) {\n          return col;\n        }\n\n        Object.keys(res).forEach(function (id) {\n          var space = _space.default.create();\n\n          space.setProperties(res[id]);\n          col.push(space);\n        });\n        return col;\n      }, function (e) {\n        console.error(e);\n      });\n      return Ember.RSVP.hash({\n        spaces: spaces,\n        spacePresets: _environment.default.spacePresets.map(function (preset) {\n          var space = _space.default.create();\n\n          space.setProperties(preset);\n          return space;\n        })\n      });\n    },\n    setupController: function setupController(controller) {\n      this._super.apply(this, arguments);\n\n      controller.set('newSpace', _space.default.create());\n    },\n    actions: {\n      addSpace: function addSpace() {\n        var _this = this;\n\n        var newSpace = this.controller.get('newSpace');\n        newSpace.set('id', newSpace.get('name').dasherize());\n        this.storage.saveSpace(newSpace).then(function () {\n          _this.coms.connectAndAddSpace(newSpace);\n\n          _this.modelFor('settings').spaces.pushObject(newSpace);\n        }, function (e) {\n          console.error('error saving in RS', newSpace, e);\n        });\n      },\n      removeSpace: function removeSpace(space) {\n        var _this2 = this;\n\n        this.storage.removeSpace(space).then(function () {\n          _this2.modelFor('settings').spaces.removeObject(space);\n        }, function (e) {\n          console.error('error deleting from RS', space, e);\n        });\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    coms: Ember.inject.service(),\n    model: function model(params) {\n      return this.coms.get('spaces').findBy('id', params.id);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space/base_channel\", [\"exports\", \"jquery\", \"ember-local-storage\"], function (_exports, _jquery, _emberLocalStorage) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function focusMessageInput() {\n    if (window.innerWidth > 900) {\n      (0, _jquery.default)('input#message-field').focus();\n    } else {// Don't auto-focus on small screens\n    }\n  }\n\n  var _default = Ember.Route.extend({\n    coms: Ember.inject.service(),\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    model: function model(params) {\n      var space = this.modelFor('space');\n      var channel = space.get('channels').findBy('slug', params.slug);\n\n      if (!channel) {\n        channel = this.createChannelOrUserChannel(space, params.slug);\n      }\n\n      return channel;\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n\n      Ember.run.scheduleOnce('afterRender', function () {\n        focusMessageInput();\n      });\n    },\n    actions: {\n      didTransition: function didTransition() {\n        var space = this.modelFor('space');\n        var channel = this.controller.get('model');\n        this.set('userSettings.currentSpace', space.get('id'));\n        this.set('userSettings.currentChannel', channel.get('slug')); // Mark all other channels as inactive/invisible\n\n        this.get('coms.spaces').forEach(function (space) {\n          space.get('channels').setEach('visible', false);\n        }); // Mark channel as active/visible\n\n        channel.set('visible', true); // Mark unread messages as read\n\n        channel.set('unreadMessages', false);\n        channel.set('unreadMentions', false);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space/channel\", [\"exports\", \"hyperchannel/routes/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.coms.createChannel(space, \"#\" + channelName);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space/user_channel\", [\"exports\", \"hyperchannel/routes/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.coms.createUserChannel(space, channelName);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/-gestures\", [\"exports\", \"hyperchannel/config/environment\", \"ember-gestures/services/-gestures\"], function (_exports, _environment, _gestures) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var assign = Ember.assign || Ember.merge;\n  var gestures = assign({}, {\n    useCapture: false\n  });\n  gestures = assign(gestures, _environment.default.gestures);\n\n  var _default = _gestures.default.extend({\n    useCapture: gestures.useCapture\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/ajax\", [\"exports\", \"ember-ajax/services/ajax\"], function (_exports, _ajax) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _ajax.default;\n    }\n  });\n});","define(\"hyperchannel/services/coms\", [\"exports\", \"hyperchannel/models/space\", \"hyperchannel/models/channel\", \"hyperchannel/models/user_channel\", \"hyperchannel/models/message\", \"hyperchannel/config/environment\", \"moment\", \"ember-local-storage\"], function (_exports, _space, _channel, _user_channel, _message, _environment, _moment, _emberLocalStorage) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  /**\n   * This service provides the central command interface for communicating with\n   * chat servers/networks\n   * @module hyperchannel/services/coms\n   */\n  var _default = Ember.Service.extend({\n    // Utils\n    ajax: Ember.inject.service(),\n    logger: Ember.inject.service(),\n    // Data storage\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    storage: Ember.inject.service('remotestorage'),\n    // Message transport\n    irc: Ember.inject.service('sockethub-irc'),\n    xmpp: Ember.inject.service('sockethub-xmpp'),\n\n    /**\n     * A collection of all space model instances\n     * @type {Space[]}\n     */\n    spaces: null,\n\n    /**\n     * This is called from the application route on app startup. Sets up all\n     * listeners for incoming Sockethub messages.\n     * @public\n     */\n    setupListeners: function setupListeners() {\n      this.sockethub.socket.on('completed', this.handleSockethubCompleted.bind(this));\n      this.sockethub.socket.on('message', this.handleSockethubMessage.bind(this));\n      this.sockethub.socket.on('failure', this.handleSockethubFailure.bind(this));\n    },\n\n    /**\n     * This is called from the application route on app startup. Instantiates,\n     * connects, and joins all either configured/saved or default spaces/channels\n     * @public\n     */\n    instantiateSpacesAndChannels: function instantiateSpacesAndChannels() {\n      var _this = this;\n\n      this.set('spaces', []);\n      var rs = this.get('storage.rs');\n      return new Ember.RSVP.Promise(function (resolve, reject) {\n        rs.kosmos.spaces.getAll().then(function (spaceData) {\n          if (Ember.isEmpty(Object.keys(spaceData))) {\n            console.debug('No space data found in RS. Adding default space...');\n\n            _this.storage.addDefaultSpace().then(function (data) {\n              _this.connectAndAddSpace(data.space);\n\n              _this.instantiateChannels(data.space, data.channels);\n\n              resolve();\n            });\n          } else {\n            Object.keys(spaceData).forEach(function (id) {\n              var space = _space.default.create();\n\n              space.setProperties({\n                id: id,\n                name: spaceData[id].name,\n                protocol: spaceData[id].protocol,\n                server: spaceData[id].server,\n                botkaURL: spaceData[id].botkaURL\n              });\n\n              _this.connectAndAddSpace(space);\n\n              _this.instantiateChannels(space, spaceData[id].channels);\n            });\n            resolve();\n          }\n        }, function (e) {\n          _this.log('error', 'couldn\\'d load spaces from RS', e);\n\n          reject();\n        });\n      });\n    },\n\n    /**\n     * Invokes the connect function on the appropriate transport service\n     * @public\n     */\n    connectServer: function connectServer(space) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).connect(space);\n    },\n    connectAndAddSpace: function connectAndAddSpace(space) {\n      this.connectServer(space);\n      this.spaces.pushObject(space);\n    },\n\n    /**\n     * Invokes the channel-join function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\"\n     * @public\n     */\n    joinChannel: function joinChannel(space, channel, type) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).join(space, channel, type);\n    },\n\n    /**\n     * Invokes the send-message function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} content\n     * @public\n     */\n    transferMessage: function transferMessage(space, channel, content) {\n      var target = {\n        '@id': channel.get('sockethubChannelId'),\n        '@type': channel.get('isUserChannel') ? 'person' : 'room',\n        displayName: channel.get('name')\n      };\n      this.getServiceForSockethubPlatform(space.get('protocol')).transferMessage(space, target, content);\n    },\n\n    /**\n     * Invokes the send-action-message function on the appropriate transport service\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.transferMeMessage(space, target, content);\n          break;\n      }\n    },\n    leaveChannel: function leaveChannel(space, channel) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.leave(space, channel);\n          break;\n      }\n    },\n    changeTopic: function changeTopic(space, channel, topic) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.changeTopic(space, channel, topic);\n          break;\n      }\n    },\n    updateChannelUserList: function updateChannelUserList(message) {\n      var channel;\n\n      switch (message.context) {\n        case 'irc':\n          channel = this.getChannelById(message.actor['@id']);\n          break;\n\n        case 'xmpp':\n          channel = this.getChannel(message.target['@id'], message.actor['@id']);\n          break;\n      }\n\n      if (channel) {\n        channel.set('connected', true);\n\n        if (Array.isArray(message.object.members)) {\n          channel.set('userList', message.object.members);\n        }\n      }\n    },\n    addUserToChannelUserList: function addUserToChannelUserList(message) {\n      var channel = this.getChannelById(message.target['@id']);\n\n      if (channel) {\n        channel.addUser(message.actor.displayName);\n      }\n    },\n    removeUserFromChannelUserList: function removeUserFromChannelUserList(message) {\n      // TODO handle user quit leaves (multiple channels)\n      // e.g. target is `{ @type: 'service', @id: 'irc://irc.freenode.net' }`\n      var channel = this.getChannelById(message.target['@id']);\n\n      if (channel) {\n        channel.removeUser(message.actor.displayName);\n      }\n    },\n    getChannelById: function getChannelById(channelId) {\n      // TODO handle multiple spaces with same hostname:\n      // This method should return an array of channels for all spaces with the\n      // same hostname\n      var hostname = channelId.match(/(?:irc:\\/\\/)?(?:.+@)?(.+?)(?:\\/|$)/)[1];\n      var space = this.spaces.findBy('server.hostname', hostname);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space by hostname', hostname);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n\n      if (Ember.isEmpty(channel)) {\n        console.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n\n    /**\n     * @param {String} personId\n     * @param {String} channelId\n     */\n    getChannel: function getChannel(personId, channelId) {\n      var space = this.spaces.findBy('sockethubPersonId', personId);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space by sockethubPersonId', personId);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n\n      if (Ember.isEmpty(channel)) {\n        console.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n    updateUsername: function updateUsername(message) {\n      if (_typeof(message.actor) === 'object') {\n        var actorId = message.actor['@id'];\n        var space = this.spaces.findBy('sockethubPersonId', actorId);\n\n        if (Ember.isPresent(space)) {\n          space.updateUsername(message.target.displayName);\n        }\n      }\n    },\n    updateChannelTopic: function updateChannelTopic(message) {\n      var hostname;\n\n      if (_typeof(message.target) === 'object') {\n        hostname = message.target['@id'].match(/irc:\\/\\/(.+)\\//)[1];\n      } else if (typeof message.actor === 'string') {\n        hostname = message.actor.match(/irc:\\/\\/.+@(.+)/)[1];\n      }\n\n      var space = this.spaces.findBy('server.hostname', hostname);\n\n      if (!Ember.isEmpty(space)) {\n        var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n        if (Ember.isEmpty(channel)) {\n          console.warn('No channel for update topic message found. Creating it.', message);\n          channel = this.createChannel(space, message.target['displayName']);\n        }\n\n        var currentTopic = channel.get('topic');\n        var newTopic = message.object.topic;\n        channel.set('topic', newTopic);\n\n        if (Ember.isPresent(currentTopic) && newTopic !== currentTopic && !channel.get('visible')) {\n          Notification.requestPermission(function () {\n            new Notification(channel.name, {\n              body: \"New Topic: \".concat(newTopic)\n            });\n          });\n        } // let notification = Message.create({\n        //   type: 'notification-topic-change',\n        //   date: new Date(message.published),\n        //   nickname: message.actor.displayName,\n        //   content: message.object.topic\n        // });\n        // channel.get('messages').pushObject(notification);\n\n      }\n    },\n    instantiateChannels: function instantiateChannels(space, channels) {\n      var _this2 = this;\n\n      channels.forEach(function (channelName) {\n        _this2.createChannel(space, channelName);\n      });\n    },\n    createChannel: function createChannel(space, channelName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _channel.default.create({\n        space: space,\n        name: channelName,\n        sockethubChannelId: platform.generateChannelId(space, channelName)\n      });\n\n      this.joinChannel(space, channel, \"room\");\n      space.get('channels').pushObject(channel); // TODO Do we need this on startup? Could overwrite updates from remote.\n\n      this.storage.saveSpace(space);\n\n      if (channel.get('isLogged')) {\n        this.loadLastMessages(space, channel, _moment.default.utc(), 2).catch(function () {});\n      }\n\n      return channel;\n    },\n    loadLastMessages: function loadLastMessages(space, channel, date) {\n      var _this3 = this;\n\n      var maximumDays = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 14;\n      var searchUntilDate;\n\n      if (channel.get('searchedPreviousLogsUntilDate')) {\n        searchUntilDate = (0, _moment.default)(channel.get('searchedPreviousLogsUntilDate')).subtract(maximumDays, 'days');\n      } else {\n        searchUntilDate = _moment.default.utc().subtract(maximumDays, 'days');\n      }\n\n      if (date.isBefore(searchUntilDate, 'day')) {\n        channel.set('searchedPreviousLogsUntilDate', date);\n        return;\n      }\n\n      return this.loadArchiveMessages(space, channel, date).catch(function () {\n        // didn't find any archive for this day, restart searching for the previous day\n        return _this3.loadLastMessages(space, channel, date.subtract(1, 'day'));\n      });\n    },\n    loadArchiveMessages: function loadArchiveMessages(space, channel, date) {\n      var _this4 = this;\n\n      var logsUrl = \"\".concat(_environment.default.publicLogsUrl, \"/\").concat(space.get('name').toLowerCase(), \"/channels/\").concat(channel.get('slug'), \"/\");\n      logsUrl += date.format('YYYY/MM/DD');\n      return this.ajax.request(logsUrl, {\n        type: 'GET',\n        dataType: 'json'\n      }).then(function (archive) {\n        Ember.get(archive, 'today.messages').forEach(function (message) {\n          _this4.log('chat_message', message);\n\n          var channelMessage = _message.default.create({\n            type: 'message-chat',\n            date: new Date(message.timestamp),\n            nickname: message.from,\n            content: message.text\n          });\n\n          channel.addMessage(channelMessage);\n        });\n        var previous = Ember.get(archive, 'today.previous');\n        channel.set('searchedPreviousLogsUntilDate', _moment.default.utc(previous.replace(/\\//g, '-')));\n      }).catch(function (error) {\n        _this4.log('ajax-error', 'couldn\\'t load archive document', error);\n\n        throw error;\n      });\n    },\n    createUserChannel: function createUserChannel(space, userName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _user_channel.default.create({\n        space: space,\n        name: userName,\n        sockethubChannelId: platform.generateChannelId(space, userName)\n      }); // TODO check if this is necesarry for XMPP,\n      // because for IRC it is not\n\n\n      this.joinChannel(space, channel, \"person\");\n      space.get('channels').pushObject(channel);\n      return channel;\n    },\n    removeChannel: function removeChannel(space, channelName) {\n      var channel = space.get('channels').findBy('name', channelName);\n      this.leaveChannel(space, channel);\n      space.get('channels').removeObject(channel);\n      this.storage.saveSpace(space);\n      return channel;\n    },\n    getServiceForSockethubPlatform: function getServiceForSockethubPlatform(protocol) {\n      return this.get(protocol.dasherize());\n    },\n\n    /*\n     * @private\n     *\n     * Handles completed Sockethub actions:\n     *\n     *     - Successfully joined a channel\n     */\n    handleSockethubCompleted: function handleSockethubCompleted(message) {\n      this.log(\"\".concat(message.context, \"_completed\"), message);\n\n      switch (message['@type']) {\n        case 'join':\n          var space = this.spaces.findBy('sockethubPersonId', message.actor['@id']); // try to find space by older sockethubPersonId\n\n          if (Ember.isEmpty(space)) {\n            space = this.spaces.find(function (space) {\n              return space.get('previousSockethubPersonIds').includes(message.actor['@id']);\n            });\n          }\n\n          if (!Ember.isEmpty(space)) {\n            this.get(message.context).handleJoinCompleted(space, message);\n          } else {\n            console.warn('Could not find space for join message', message);\n          }\n\n          break;\n      }\n    },\n\n    /**\n     * Handles incoming Sockethub messages:\n     * - Attendance list for channel\n     * - Another user joined or left a channel\n     * - Received a channel message (normal or me/action)\n     * - A channel topic was updated\n     * - The username/address changed\n     * @private\n     */\n    handleSockethubMessage: function handleSockethubMessage(message) {\n      this.log(\"\".concat(message.context, \"_message\"), 'SH message', message);\n\n      switch (message['@type']) {\n        case 'observe':\n          if (message.object['@type'] === 'attendance') {\n            this.updateChannelUserList(message);\n          }\n\n          break;\n\n        case 'join':\n          this.handleChannelJoin(message);\n          break;\n\n        case 'leave':\n          this.removeUserFromChannelUserList(message);\n          break;\n\n        case 'send':\n          switch (message.object['@type']) {\n            case 'message':\n            case 'me':\n              this.getServiceForSockethubPlatform(message.context).addMessageToChannel(message);\n              break;\n          }\n\n          break;\n\n        case 'update':\n          switch (message.object['@type']) {\n            case 'topic':\n              this.updateChannelTopic(message);\n              break;\n\n            case 'address':\n              this.updateUsername(message);\n              break;\n\n            case 'presence':\n              this.xmpp.handlePresenceUpdate(message);\n              break;\n\n            case 'error':\n              console.warn('Got error update message', message.actor['@id'], message.object.content);\n              break;\n          }\n\n          break;\n      }\n    },\n\n    /**\n     * Handles the various checks assosciated with channel joins\n     * @private\n     */\n    handleChannelJoin: function handleChannelJoin(message) {\n      if (message.object['@type'] && message.object['@type'] === 'error') {\n        // failed to join a channel\n        var channel = this.getChannel(message.target['@id'], message.actor['@id']);\n\n        if (Ember.isPresent(channel)) {\n          channel.set('connected', false);\n        } else {\n          console.warn('Could not find channel for error message', message);\n        }\n      } else {\n        this.addUserToChannelUserList(message);\n      }\n    },\n\n    /**\n     * Handles incoming Sockethub errors/failures\n     * @private\n     */\n    handleSockethubFailure: function handleSockethubFailure(message) {\n      this.log('sh_failure', message);\n    },\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _this$logger;\n\n      (_this$logger = this.logger).log.apply(_this$logger, arguments);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/ember-elsewhere\", [\"exports\", \"ember-elsewhere/services/ember-elsewhere\"], function (_exports, _emberElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _emberElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/services/liquid-fire-transitions\", [\"exports\", \"liquid-fire/transition-map\"], function (_exports, _transitionMap) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _transitionMap.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/services/logger\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Service.extend({\n    enabled: true,\n    allowedTypes: null,\n    activeTypes: null,\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('allowedTypes', ['connection', 'error', 'join', 'leave', 'message', 'irc_message', 'xmpp_message', 'send', 'xmpp_completed', 'irc_completed', 'sh_completed', 'sh_failure', 'irc', 'xmpp', 'ajax-error', 'chat_message']);\n      this.set('activeTypes', ['connection', 'error', 'join', 'leave', 'send', 'sh_completed', 'xmpp_completed', 'irc_completed', 'sh_failure', 'irc', 'xmpp', 'message', 'irc_message', 'xmpp_message']);\n    },\n    log: function log(type) {\n      if (!this.allowedTypes.includes(type)) {\n        throw new Error(\"You specified a unknown type: \\\"\".concat(type, \"\\\".\"));\n      }\n\n      if (this.activeTypes.includes(type) && this.enabled) {\n        var params = Array.prototype.slice.call(arguments);\n        params[0] = \"[\".concat(params[0], \"]\");\n        console.debug.apply(null, params);\n      }\n    },\n    add: function add(type) {\n      this.activeTypes.addObject(type);\n    },\n    remove: function remove(type) {\n      this.activeTypes.removeObject(type);\n    },\n    disable: function disable() {\n      this.set('enabled', false);\n    },\n    enable: function enable() {\n      this.set('enabled', true);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/moment\", [\"exports\", \"ember-moment/services/moment\", \"hyperchannel/config/environment\"], function (_exports, _moment, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var get = Ember.get;\n\n  var _default = _moment.default.extend({\n    defaultFormat: get(_environment.default, 'moment.outputFormat')\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/remotestorage\", [\"exports\", \"hyperchannel/models/space\", \"remotestoragejs\", \"remotestorage-module-kosmos\", \"hyperchannel/config/environment\"], function (_exports, _space, _remotestoragejs, _remotestorageModuleKosmos, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Service.extend({\n    rs: null,\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      var rs = new _remotestoragejs.default({\n        modules: [_remotestorageModuleKosmos.default]\n      });\n      rs.access.claim('kosmos', 'rw');\n      rs.caching.enable('/kosmos/');\n      this.set('rs', rs);\n    },\n    addDefaultSpace: function addDefaultSpace() {\n      var spaceConfig = _environment.default.spacePresets.find(function (s) {\n        return s.id === _environment.default.defaultSpaceId;\n      });\n\n      var params = {\n        id: spaceConfig.id,\n        name: spaceConfig.name,\n        protocol: spaceConfig.protocol,\n        server: spaceConfig.server,\n        channels: ['#hackerbeach', '#kosmos', '#kosmos-dev', '#kosmos-random', '#sockethub'],\n        botkaURL: spaceConfig.botkaURL\n      };\n      params.server.nickname = window.prompt(\"Choose a nickname\");\n      return this.rs.kosmos.spaces.store(params).then(function () {\n        console.debug('[remotestorage]', 'created/stored default space');\n        var channels = params.channels;\n        delete params.channels;\n\n        var space = _space.default.create();\n\n        space.setProperties(params);\n        return {\n          space: space,\n          channels: channels\n        };\n      });\n    },\n    saveSpace: function saveSpace(space) {\n      return this.rs.kosmos.spaces.store(space.serialize()).then(function () {\n        return console.debug('[remotestorage]', \"saved space \".concat(space.get('name')));\n      }).catch(function (err) {\n        return console.error('saving space failed:', err);\n      });\n    },\n    removeSpace: function removeSpace(space) {\n      return this.rs.kosmos.spaces.remove(space.get('id')).then(function () {\n        return console.debug('[remotestorage]', \"removed space \".concat(space.get('name'), \" from RS\"));\n      });\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/sockethub-irc\", [\"exports\", \"jquery\", \"hyperchannel/utils/channel-message-from-sockethub-object\"], function (_exports, _jquery, _channelMessageFromSockethubObject) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param {Space} space - space model the activity belongs to\n   * @param {Object} details - the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'irc',\n      actor: space.get('sockethubPersonId')\n    };\n    return _jquery.default.extend({}, baseObject, details);\n  }\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n\n\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n  /**\n   * This service provides helpers for SocketHub IRC communications\n   * @module hyperchannel/services/sockethub-irc\n   */\n\n\n  var _default = Ember.Service.extend({\n    logger: Ember.inject.service(),\n    coms: Ember.inject.service(),\n\n    /**\n     * - Creates an ActivityStreams person object for\n     *   future use\n     * - Emits credentials for future IRC server messages,\n     *   like e.g. `join`\n     * @public\n     */\n    connect: function connect(space) {\n      var actorObject = {\n        '@id': space.get('sockethubPersonId'),\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      };\n      console.debug('actor object', actorObject);\n      this.sockethub.ActivityStreams.Object.create(actorObject);\n      var credentials = buildActivityObject(space, {\n        object: {\n          '@type': 'credentials',\n          nick: space.get('server.nickname'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          secure: space.get('server.secure')\n        }\n      });\n      this.log('irc', 'connecting to IRC network', credentials);\n      this.sockethub.socket.emit('credentials', credentials);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n      if (channel) {\n        this.observeChannel(space, channel);\n      }\n    },\n\n    /**\n     * Join a channel/room\n     * @public\n     */\n    join: function join(space, channel, type) {\n      switch (type) {\n        case 'room':\n          this.sockethub.ActivityStreams.Object.create({\n            '@type': type,\n            '@id': channel.get('sockethubChannelId'),\n            displayName: channel.get('name')\n          });\n          var joinMsg = buildActivityObject(space, {\n            '@type': 'join',\n            target: channel.get('sockethubChannelId'),\n            object: {}\n          });\n          this.log('irc', 'joining channel', joinMsg);\n          this.sockethub.socket.emit('message', joinMsg);\n          break;\n\n        case 'person':\n          channel.set('connected', true);\n          break;\n      }\n    },\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n    /**\n     * Send an action chat message to a channel\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content, 'me');\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      var hostname = message.actor['@id'].match(/irc:\\/\\/.+@(.+)/)[1];\n      var space = this.get('coms.spaces').findBy('server.hostname', hostname);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message);\n      channel.addMessage(channelMessage);\n    },\n\n    /**\n     * Leave a channel\n     * @public\n     */\n    leave: function leave(space, channel) {\n      if (!channel.get('isUserChannel')) {\n        // TODO Do we really need to create this room for leaving? It should\n        // already have been created when joining.\n        this.sockethub.ActivityStreams.Object.create({\n          '@type': \"room\",\n          '@id': channel.get('sockethubChannelId'),\n          displayName: channel.get('name')\n        });\n        var leaveMsg = buildActivityObject(space, {\n          '@type': 'leave',\n          target: channel.get('sockethubChannelId'),\n          object: {}\n        });\n        this.log('leave', 'leaving channel', leaveMsg);\n        this.sockethub.socket.emit('message', leaveMsg);\n      }\n    },\n\n    /**\n     * Send a channel topic change\n     * @public\n     */\n    changeTopic: function changeTopic(space, channel, topic) {\n      var topicMsg = buildActivityObject(space, {\n        '@type': 'update',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'topic',\n          topic: topic\n        }\n      });\n      this.sockethub.socket.emit('message', topicMsg);\n    },\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n      this.log('irc', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return \"irc://\".concat(space.get('server.hostname'), \"/\").concat(channelName);\n    },\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelName, channel;\n\n      if (space.get('userNickname') === message.target.displayName) {\n        // direct message\n        targetChannelName = message.actor.displayName || message.actor['@id'];\n        channel = space.get('channels').findBy('name', targetChannelName);\n\n        if (!channel) {\n          channel = this.coms.createUserChannel(space, targetChannelName);\n        }\n      } else {\n        // channel message\n        targetChannelName = message.target.displayName;\n        channel = space.get('channels').findBy('name', targetChannelName);\n\n        if (!channel) {\n          channel = this.coms.createChannel(space, targetChannelName);\n        }\n      }\n\n      return channel;\n    },\n\n    /**\n     * Utility function for easier logging\n     * @protected\n     */\n    log: function log() {\n      var _this$logger;\n\n      (_this$logger = this.logger).log.apply(_this$logger, arguments);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/sockethub-xmpp\", [\"exports\", \"jquery\", \"hyperchannel/utils/channel-message-from-sockethub-object\"], function (_exports, _jquery, _channelMessageFromSockethubObject) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param space {Space} space model the activity belongs to\n   * @param details {Object} the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'xmpp',\n      actor: space.get('sockethubPersonId')\n    };\n    return _jquery.default.extend({}, baseObject, details);\n  }\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n\n\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n  /**\n   * This service provides helpers for SocketHub XMPP communications\n   * @module hyperchannel/services/sockethub-xmpp\n   */\n\n\n  var _default = Ember.Service.extend({\n    logger: Ember.inject.service(),\n    coms: Ember.inject.service(),\n\n    /**\n     * @public\n     */\n    connect: function connect(space) {\n      var actor = space.get('sockethubPersonId');\n      this.sockethub.ActivityStreams.Object.create({\n        '@id': actor,\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      });\n      var credentialsJob = {\n        actor: actor,\n        context: 'xmpp',\n        object: {\n          '@type': 'credentials',\n          username: space.get('server.username'),\n          password: space.get('server.password'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          resource: 'hyperchannel'\n        }\n      };\n      var connectJob = {\n        '@type': 'connect',\n        context: 'xmpp',\n        actor: actor\n      };\n      this.log('xmpp', 'connecting to XMPP server...');\n      this.sockethub.socket.emit('credentials', credentialsJob);\n      this.sockethub.socket.emit('message', connectJob);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channelId = message.target['@id'].split('/')[0];\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n\n      if (channel) {\n        this.observeChannel(space, channel);\n      } else {\n        console.warn('Could not find channel for join message', message);\n      }\n    },\n\n    /**\n     * Join a channel/room\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\".\n     * @public\n     */\n    join: function join(space, channel, type) {\n      this.sockethub.ActivityStreams.Object.create({\n        '@type': type,\n        '@id': channel.get('sockethubChannelId'),\n        displayName: channel.get('name')\n      });\n      var joinMsg = buildActivityObject(space, {\n        '@type': 'join',\n        actor: {\n          '@type': 'person',\n          '@id': space.get('sockethubPersonId'),\n          displayName: space.get('server.nickname')\n        },\n        target: {\n          '@id': channel.get('sockethubChannelId'),\n          '@type': type\n        }\n      });\n      this.log('xmpp', 'joining channel', joinMsg);\n      this.sockethub.socket.emit('message', joinMsg);\n    },\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n    handlePresenceUpdate: function handlePresenceUpdate(message) {\n      if (message.target['@type'] === 'room') {\n        var targetChannelId = message.target['@id'];\n        var space = this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n        var channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n\n        if (channel) {\n          if (message.object.presence === 'offline') {\n            channel.removeUser(message.actor.displayName);\n          } else {\n            channel.addUser(message.actor.displayName);\n          }\n        }\n      } else {\n        console.debug('Presence update:', message.actor['@id'], message.object.presence, message.object.status);\n      }\n    },\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      if (Ember.isEmpty(message.object.content)) {\n        return;\n      }\n\n      var space = this.getSpaceForMessage(message);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message); // TODO should check for message and update sent status if exists\n\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n      this.log('xmpp', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return channelName;\n    },\n\n    /**\n     * Get the space for a given message.\n     *\n     * @param {Object} message\n     * @returns {Space} space\n     * @public\n     */\n    getSpaceForMessage: function getSpaceForMessage(message) {\n      var targetChannelId = message.target['@id'];\n\n      if (message.target['@type'] === 'room') {\n        return this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n      } else {\n        return this.get('coms.spaces').findBy('sockethubPersonId', targetChannelId);\n      }\n    },\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelId = message.target['@id'];\n      var channel;\n\n      if (message.target['@type'] === 'room') {\n        channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n\n        if (!channel) {\n          channel = this.coms.createChannel(space, targetChannelId);\n        }\n      } else {\n        channel = space.get('channels').findBy('sockethubChannelId', message.actor['@id']);\n\n        if (!channel) {\n          channel = this.coms.createUserChannel(space, message.actor['@id']);\n        }\n      }\n\n      return channel;\n    },\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _this$logger;\n\n      (_this$logger = this.logger).log.apply(_this$logger, arguments);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/storages/user-settings\", [\"exports\", \"ember-local-storage/local/object\", \"hyperchannel/config/environment\"], function (_exports, _object, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var Storage = _object.default.extend();\n\n  Storage.reopenClass({\n    initialState: function initialState() {\n      return {\n        nickname: null,\n        currentSpace: _environment.default.defaultSpaceId,\n        currentChannel: 'kosmos'\n      };\n    }\n  });\n  var _default = Storage;\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/application\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"f+7OC7Md\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"app-container\\\",null,[[\\\"showGlobalMenu\\\",\\\"showChannelMenu\\\"],[[25,[\\\"showGlobalMenu\\\"]],[25,[\\\"showChannelMenu\\\"]]]],{\\\"statements\\\":[[0,\\\"  \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"global\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"header\\\"],[11,\\\"id\\\",\\\"sitename\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"h1\\\"],[9],[0,\\\"Kosmos\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"main\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"nav\\\"],[11,\\\"id\\\",\\\"channels\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"channel-nav\\\",null,[[\\\"spaces\\\"],[[25,[\\\"spaces\\\"]]]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[1,[23,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[1,[23,\\\"modal-target\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/application.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/settings\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"VAlcTWrX\",\n    \"block\": \"{\\\"symbols\\\":[\\\"spacePreset\\\",\\\"space\\\"],\\\"statements\\\":[[7,\\\"section\\\"],[11,\\\"id\\\",\\\"settings\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Settings\\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"content\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Spaces\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[25,[\\\"model\\\",\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"h3\\\"],[9],[1,[24,2,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n      \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"delete\\\"],[3,\\\"action\\\",[[24,0,[]],\\\"removeSpace\\\",[24,2,[]]]],[10],[0,\\\"\\\\n      \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Presets\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[25,[\\\"model\\\",\\\"spacePresets\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"h3\\\"],[9],[1,[24,1,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n      \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"add\\\"],[3,\\\"action\\\",[[24,0,[]],\\\"addSpaceFromPreset\\\",[24,1,[]]]],[10],[0,\\\"\\\\n      \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Add new space\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"form\\\"],[11,\\\"name\\\",\\\"add-space\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[25,[\\\"newSpace\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[25,[\\\"newSpace\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[25,[\\\"newSpace\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[25,[\\\"newSpace\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled\\\"]]],false],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"tls-enabled\\\"],[9],[0,\\\"Secure (TLS)\\\"],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[25,[\\\"newSpace\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"input\\\",null,[[\\\"type\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"password\\\",[25,[\\\"newSpace\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[29,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[25,[\\\"newSpace\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"input\\\"],[11,\\\"value\\\",\\\"Save\\\"],[11,\\\"type\\\",\\\"submit\\\"],[9],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[3,\\\"action\\\",[[24,0,[]],\\\"addSpace\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[10],[0,\\\"\\\\n\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[25,[\\\"showSpaceSettingModal\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[1,[29,\\\"to-elsewhere\\\",null,[[\\\"named\\\",\\\"send\\\"],[\\\"modal\\\",[29,\\\"hash\\\",null,[[\\\"body\\\",\\\"onOutsideClick\\\"],[[29,\\\"component\\\",[\\\"space-setting-modal\\\"],[[\\\"settings\\\",\\\"onSave\\\",\\\"onCancel\\\"],[[25,[\\\"selectedSpacePreset\\\"]],[29,\\\"action\\\",[[24,0,[]],\\\"saveSpace\\\"],null],[29,\\\"action\\\",[[24,0,[]],[29,\\\"mut\\\",[[25,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]],[29,\\\"action\\\",[[24,0,[]],[29,\\\"mut\\\",[[25,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/settings.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/space/channel\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"3/UEhoHs\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[29,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\",\\\"menu\\\"],[[25,[\\\"model\\\"]],[25,[\\\"newMessage\\\"]],[29,\\\"action\\\",[[24,0,[]],\\\"sendMessage\\\"],null],[29,\\\"action\\\",[[24,0,[]],\\\"executeCommand\\\"],null],[29,\\\"action\\\",[[24,0,[]],\\\"menu\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/space/channel.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/space/index\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"iUmRIy7w\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"section\\\"],[11,\\\"id\\\",\\\"space\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h2\\\"],[9],[1,[25,[\\\"model\\\",\\\"name\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"discreet\\\"],[9],[1,[25,[\\\"model\\\",\\\"server\\\",\\\"hostname\\\"]],false],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"content\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n      \\\"],[1,[29,\\\"web-push-subscription\\\",null,[[\\\"botkaURL\\\",\\\"username\\\"],[[25,[\\\"model\\\",\\\"botkaURL\\\"]],[25,[\\\"model\\\",\\\"userNickname\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/space/index.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/space/user_channel\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"B8LEtJYC\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[29,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\"],[[25,[\\\"model\\\"]],[25,[\\\"newMessage\\\"]],[29,\\\"action\\\",[[24,0,[]],\\\"sendMessage\\\"],null],[29,\\\"action\\\",[[24,0,[]],\\\"executeCommand\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/space/user_channel.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/transitions/cross-fade\", [\"exports\", \"liquid-fire/transitions/cross-fade\"], function (_exports, _crossFade) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _crossFade.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/default\", [\"exports\", \"liquid-fire/transitions/default\"], function (_exports, _default) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _default.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/explode\", [\"exports\", \"liquid-fire/transitions/explode\"], function (_exports, _explode) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _explode.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/fade\", [\"exports\", \"liquid-fire/transitions/fade\"], function (_exports, _fade) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _fade.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/flex-grow\", [\"exports\", \"liquid-fire/transitions/flex-grow\"], function (_exports, _flexGrow) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _flexGrow.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/fly-to\", [\"exports\", \"liquid-fire/transitions/fly-to\"], function (_exports, _flyTo) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _flyTo.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/move-over\", [\"exports\", \"liquid-fire/transitions/move-over\"], function (_exports, _moveOver) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _moveOver.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/scale\", [\"exports\", \"liquid-fire/transitions/scale\"], function (_exports, _scale) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _scale.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/scroll-then\", [\"exports\", \"liquid-fire/transitions/scroll-then\"], function (_exports, _scrollThen) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _scrollThen.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-down\", [\"exports\", \"liquid-fire/transitions/to-down\"], function (_exports, _toDown) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toDown.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-left\", [\"exports\", \"liquid-fire/transitions/to-left\"], function (_exports, _toLeft) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toLeft.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-right\", [\"exports\", \"liquid-fire/transitions/to-right\"], function (_exports, _toRight) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toRight.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-up\", [\"exports\", \"liquid-fire/transitions/to-up\"], function (_exports, _toUp) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toUp.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/wait\", [\"exports\", \"liquid-fire/transitions/wait\"], function (_exports, _wait) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _wait.default;\n    }\n  });\n});","define(\"hyperchannel/utils/channel-message-from-sockethub-object\", [\"exports\", \"hyperchannel/models/message\"], function (_exports, _message) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = channelMessageFromSockethubObject;\n\n  function channelMessageFromSockethubObject(message) {\n    var channelMessage = _message.default.create({\n      type: message.object['@type'] === 'me' ? 'message-chat-me' : 'message-chat',\n      date: message.published ? new Date(message.published) : new Date(),\n      nickname: message.actor.displayName || message.actor['@id'],\n      content: message.object.content\n    });\n\n    return channelMessage;\n  }\n});","define(\"hyperchannel/utils/url-base64-to-uint8-array\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = urlBase64ToUint8Array;\n\n  function urlBase64ToUint8Array(base64String) {\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\n    var base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    var rawData = window.atob(base64);\n    var outputArray = new Uint8Array(rawData.length);\n\n    for (var i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n  }\n});","define('hyperchannel/config/environment', [], function() {\n  var prefix = 'hyperchannel';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","\n          if (!runningTests) {\n            require(\"hyperchannel/app\")[\"default\"].create({\"name\":\"hyperchannel\",\"version\":\"0.5.1+d2625879\"});\n          }\n        \n"]}